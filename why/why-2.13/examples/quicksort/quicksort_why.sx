
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y)))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y)))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y)))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y)))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y)))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y)))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x) (FORALL (y) (EQ (ite |@true| x y) x))))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x) (FORALL (y) (EQ (ite |@false| x y) y))))

(BG_PUSH
 ;; Why axiom sorted_array_def
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (sorted_array t i j) |@true|)
 (FORALL (k)
 (IMPLIES (AND (<= i k) (< k j)) (<= (access t k) (access t (+ k 1))))))))))

(BG_PUSH
 ;; Why axiom exchange_def
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (exchange t1 t2 i j) |@true|)
 (AND (EQ (array_length t1) (array_length t2))
 (AND (EQ (access t1 i) (access t2 j))
 (AND (EQ (access t2 i) (access t1 j))
 (FORALL (k)
 (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access t1 k) (access t2 k)))))))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t) (EQ (permut t t) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|) (EQ (permut t2 t1) |@true|)))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (IMPLIES (AND (EQ (permut t1 t2) |@true|) (EQ (permut t2 t3) |@true|))
 (EQ (permut t1 t3) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (EQ (permut t (update (update t i (access t j)) j (access t i))) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_refl
 (FORALL (t) (FORALL (g) (FORALL (d) (EQ (sub_permut g d t t) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (sub_permut g d t2 t1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|))))))))

 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_1
 (FORALL (t)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|)))))))

 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (FORALL (t)
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_2
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES
 (AND (<= g i)
 (AND (<= i d)
 (AND (<= g j) (AND (<= j d) (EQ (exchange t1 t2 i j) |@true|)))))
 (EQ (sub_permut g d t1 t2) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_permut
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|) (EQ (permut t1 t2) |@true|)))))))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (t)
 (FORALL (i)
 (FORALL (v) (EQ (array_length (update t i v)) (array_length t))))))

(BG_PUSH
 ;; Why axiom sub_permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))

;; swap_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t i))
(IMPLIES (AND (<= 0 j) (< j (array_length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t j))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t i result0)) (AND (<= 0 j) (< j (array_length t0))))))))))))))))

;; swap_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t i))
(IMPLIES (AND (<= 0 j) (< j (array_length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t j))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t i result0))
(IMPLIES (AND (<= 0 j) (< j (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 j result)) (EQ (exchange t1 t i j) |@true|)))))))))))))))))

;; partition_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(AND (<= 0 l) (< l (array_length t)))))))

;; partition_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
(AND (<= r r)
(AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
(AND (EQ (array_ge t (+ r 1) r result) |@true|)
(AND (EQ (sub_permut l r t t) |@true|) (EQ (access t l) (access t l))))))))))))))

;; partition_po_3, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(AND (AND (<= i i) (<= i r))
(EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)))))))))))))))

;; partition_po_4, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(AND (<= 0 i0) (< i0 (array_length t0)))))))))))))))))))

;; partition_po_5, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (< i0 j)
(FORALL (i1)
(IMPLIES (EQ i1 (+ i0 1))
(AND
(AND (AND (<= i i1) (<= i1 r))
(EQ (array_le t0 (+ l 1) (- i1 1) result) |@true|))
(AND (<= 0 (- r i0)) (< (- r i1) (- r i0)))))))))))))))))))))))))))

;; partition_po_6, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(AND (AND (<= l j) (<= j j)) (EQ (array_ge t0 (+ j 1) r result) |@true|)))))))))))))))))))))))

;; partition_po_7, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(AND (<= 0 j0) (< j0 (array_length t0)))))))))))))))))))))))))))

;; partition_po_8, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (>= result1 result)
(IMPLIES (< i0 j0)
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= l j1) (<= j1 j)) (EQ (array_ge t0 (+ j1 1) r result) |@true|))
(AND (<= 0 j0) (< j1 j0))))))))))))))))))))))))))))))))))

;; partition_po_9, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (>= result1 result)
(IMPLIES (>= i0 j0)
(IMPLIES (< i0 j0)
(IMPLIES (AND (AND (<= 0 i0) (< i0 (array_length t0)))
         (AND (<= 0 j0) (< j0 (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 i0 j0) |@true|)
(FORALL (i1)
(IMPLIES (EQ i1 (+ i0 1))
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= (+ l 1) i1) (<= i1 r))
(AND (<= j1 r)
(AND (EQ (array_le t1 (+ l 1) (- i1 1) result) |@true|)
(AND (EQ (array_ge t1 (+ j1 1) r result) |@true|)
(AND (EQ (sub_permut l r t1 t) |@true|) (EQ (access t1 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t1) 2) j1) i1) (- (+ (+ (array_length t0) 2) j) i)))))))))))))))))))))))))))))))))))))))))

;; partition_po_10, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (>= result1 result)
(IMPLIES (>= i0 j0)
(AND
(AND (AND (<= (+ l 1) i0) (<= i0 r))
(AND (<= j0 r)
(AND (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|)
(AND (EQ (array_ge t0 (+ j0 1) r result) |@true|)
(AND (EQ (sub_permut l r t0 t) |@true|) (EQ (access t0 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t0) 2) j0) i0) (- (+ (+ (array_length t0) 2) j) i)))))))))))))))))))))))))))))))))

;; partition_po_11, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (< result1 result)
(IMPLIES (< i0 j0)
(IMPLIES (AND (AND (<= 0 i0) (< i0 (array_length t0)))
         (AND (<= 0 j0) (< j0 (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 i0 j0) |@true|)
(FORALL (i1)
(IMPLIES (EQ i1 (+ i0 1))
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= (+ l 1) i1) (<= i1 r))
(AND (<= j1 r)
(AND (EQ (array_le t1 (+ l 1) (- i1 1) result) |@true|)
(AND (EQ (array_ge t1 (+ j1 1) r result) |@true|)
(AND (EQ (sub_permut l r t1 t) |@true|) (EQ (access t1 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t1) 2) j1) i1) (- (+ (+ (array_length t0) 2) j) i))))))))))))))))))))))))))))))))))))))))

;; partition_po_12, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (<= result0 result)
(IMPLIES (>= i0 j)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (< result1 result)
(IMPLIES (>= i0 j0)
(AND
(AND (AND (<= (+ l 1) i0) (<= i0 r))
(AND (<= j0 r)
(AND (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|)
(AND (EQ (array_ge t0 (+ j0 1) r result) |@true|)
(AND (EQ (sub_permut l r t0 t) |@true|) (EQ (access t0 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t0) 2) j0) i0) (- (+ (+ (array_length t0) 2) j) i)))))))))))))))))))))))))))))))))

;; partition_po_13, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(AND (AND (<= l j) (<= j j)) (EQ (array_ge t0 (+ j 1) r result) |@true|))))))))))))))))))))))

;; partition_po_14, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(AND (<= 0 j0) (< j0 (array_length t0))))))))))))))))))))))))))

;; partition_po_15, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (>= result1 result)
(IMPLIES (< i0 j0)
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= l j1) (<= j1 j)) (EQ (array_ge t0 (+ j1 1) r result) |@true|))
(AND (<= 0 j0) (< j1 j0)))))))))))))))))))))))))))))))))

;; partition_po_16, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (>= result1 result)
(IMPLIES (>= i0 j0)
(IMPLIES (< i0 j0)
(IMPLIES (AND (AND (<= 0 i0) (< i0 (array_length t0)))
         (AND (<= 0 j0) (< j0 (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 i0 j0) |@true|)
(FORALL (i1)
(IMPLIES (EQ i1 (+ i0 1))
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= (+ l 1) i1) (<= i1 r))
(AND (<= j1 r)
(AND (EQ (array_le t1 (+ l 1) (- i1 1) result) |@true|)
(AND (EQ (array_ge t1 (+ j1 1) r result) |@true|)
(AND (EQ (sub_permut l r t1 t) |@true|) (EQ (access t1 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t1) 2) j1) i1) (- (+ (+ (array_length t0) 2) j) i))))))))))))))))))))))))))))))))))))))))

;; partition_po_17, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (>= result1 result)
(IMPLIES (>= i0 j0)
(AND
(AND (AND (<= (+ l 1) i0) (<= i0 r))
(AND (<= j0 r)
(AND (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|)
(AND (EQ (array_ge t0 (+ j0 1) r result) |@true|)
(AND (EQ (sub_permut l r t0 t) |@true|) (EQ (access t0 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t0) 2) j0) i0) (- (+ (+ (array_length t0) 2) j) i))))))))))))))))))))))))))))))))

;; partition_po_18, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (< result1 result)
(IMPLIES (< i0 j0)
(IMPLIES (AND (AND (<= 0 i0) (< i0 (array_length t0)))
         (AND (<= 0 j0) (< j0 (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 i0 j0) |@true|)
(FORALL (i1)
(IMPLIES (EQ i1 (+ i0 1))
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= (+ l 1) i1) (<= i1 r))
(AND (<= j1 r)
(AND (EQ (array_le t1 (+ l 1) (- i1 1) result) |@true|)
(AND (EQ (array_ge t1 (+ j1 1) r result) |@true|)
(AND (EQ (sub_permut l r t1 t) |@true|) (EQ (access t1 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t1) 2) j1) i1) (- (+ (+ (array_length t0) 2) j) i)))))))))))))))))))))))))))))))))))))))

;; partition_po_19, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (< i j)
(IMPLIES (AND (AND (<= i i) (<= i r))
         (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|))
(FORALL (i0)
(IMPLIES (AND (AND (<= i i0) (<= i0 r))
         (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i0))
(IMPLIES (> result0 result)
(IMPLIES (AND (AND (<= l j) (<= j j))
         (EQ (array_ge t0 (+ j 1) r result) |@true|))
(FORALL (j0)
(IMPLIES (AND (AND (<= l j0) (<= j0 j))
         (EQ (array_ge t0 (+ j0 1) r result) |@true|))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 j0))
(IMPLIES (< result1 result)
(IMPLIES (>= i0 j0)
(AND
(AND (AND (<= (+ l 1) i0) (<= i0 r))
(AND (<= j0 r)
(AND (EQ (array_le t0 (+ l 1) (- i0 1) result) |@true|)
(AND (EQ (array_ge t0 (+ j0 1) r result) |@true|)
(AND (EQ (sub_permut l r t0 t) |@true|) (EQ (access t0 l) (access t l)))))))
(AND (<= 0 (- (+ (+ (array_length t0) 2) j) i))
(< (- (+ (+ (array_length t0) 2) j0) i0) (- (+ (+ (array_length t0) 2) j) i))))))))))))))))))))))))))))))))

;; partition_po_20, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (>= i j) (AND (<= 0 i) (< i (array_length t0))))))))))))))))

;; partition_po_21, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (>= i j)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (< result0 result)
(AND (AND (<= 0 l) (< l (array_length t0)))
(AND (<= 0 i) (< i (array_length t0)))))))))))))))))))))

;; partition_po_22, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (>= i j)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (< result0 result)
(IMPLIES (AND (AND (<= 0 l) (< l (array_length t0)))
         (AND (<= 0 i) (< i (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l i) |@true|)
(AND (AND (<= l i) (<= i r))
(AND (EQ (partition_p t1 l r i) |@true|) (EQ (sub_permut l r t1 t) |@true|)))))))))))))))))))))))

;; partition_po_23, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (>= i j)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (>= result0 result)
(AND (AND (<= 0 l) (< l (array_length t0)))
(AND (<= 0 (- i 1)) (< (- i 1) (array_length t0)))))))))))))))))))))

;; partition_po_24, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(IMPLIES (AND (<= 0 l) (< l (array_length t)))
(FORALL (result)
(IMPLIES (EQ result (access t l))
(IMPLIES (AND (AND (<= (+ l 1) (+ l 1)) (<= (+ l 1) r))
         (AND (<= r r)
         (AND (EQ (array_le t (+ l 1) (- (+ l 1) 1) result) |@true|)
         (AND (EQ (array_ge t (+ r 1) r result) |@true|)
         (AND (EQ (sub_permut l r t t) |@true|)
         (EQ (access t l) (access t l)))))))
(FORALL (i)
(FORALL (j)
(FORALL (t0)
(IMPLIES (AND (AND (<= (+ l 1) i) (<= i r))
         (AND (<= j r)
         (AND (EQ (array_le t0 (+ l 1) (- i 1) result) |@true|)
         (AND (EQ (array_ge t0 (+ j 1) r result) |@true|)
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (EQ (access t0 l) (access t l)))))))
(IMPLIES (>= i j)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (>= result0 result)
(IMPLIES (AND (AND (<= 0 l) (< l (array_length t0)))
         (AND (<= 0 (- i 1)) (< (- i 1) (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l (- i 1)) |@true|)
(AND (AND (<= l (- i 1)) (<= (- i 1) r))
(AND (EQ (partition_p t1 l r (- i 1)) |@true|)
(EQ (sub_permut l r t1 t) |@true|)))))))))))))))))))))))

;; quick_rec_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r) (AND (AND (<= 0 l) (< l r)) (< r (array_length t))))))))

;; quick_rec_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(FORALL (result)
(FORALL (t0)
(IMPLIES (AND (AND (<= l result) (<= result r))
         (AND (EQ (partition_p t0 l r result) |@true|)
         (EQ (sub_permut l r t0 t) |@true|)))
(AND (<= 0 (- (+ 1 r) l)) (< (- (+ 1 (- result 1)) l) (- (+ 1 r) l))))))))))))

;; quick_rec_po_3, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(FORALL (result)
(FORALL (t0)
(IMPLIES (AND (AND (<= l result) (<= result r))
         (AND (EQ (partition_p t0 l r result) |@true|)
         (EQ (sub_permut l r t0 t) |@true|)))
(IMPLIES (AND (<= 0 (- (+ 1 r) l))
         (< (- (+ 1 (- result 1)) l) (- (+ 1 r) l)))
(AND (<= 0 l) (< (- result 1) (array_length t0)))))))))))))

;; quick_rec_po_4, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(FORALL (result)
(FORALL (t0)
(IMPLIES (AND (AND (<= l result) (<= result r))
         (AND (EQ (partition_p t0 l r result) |@true|)
         (EQ (sub_permut l r t0 t) |@true|)))
(IMPLIES (AND (<= 0 (- (+ 1 r) l))
         (< (- (+ 1 (- result 1)) l) (- (+ 1 r) l)))
(IMPLIES (AND (<= 0 l) (< (- result 1) (array_length t0)))
(FORALL (t1)
(IMPLIES (AND (EQ (sorted_array t1 l (- result 1)) |@true|)
         (EQ (sub_permut l (- result 1) t1 t0) |@true|))
(AND (<= 0 (- (+ 1 r) l)) (< (- (+ 1 r) (+ result 1)) (- (+ 1 r) l))))))))))))))))

;; quick_rec_po_5, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(FORALL (result)
(FORALL (t0)
(IMPLIES (AND (AND (<= l result) (<= result r))
         (AND (EQ (partition_p t0 l r result) |@true|)
         (EQ (sub_permut l r t0 t) |@true|)))
(IMPLIES (AND (<= 0 (- (+ 1 r) l))
         (< (- (+ 1 (- result 1)) l) (- (+ 1 r) l)))
(IMPLIES (AND (<= 0 l) (< (- result 1) (array_length t0)))
(FORALL (t1)
(IMPLIES (AND (EQ (sorted_array t1 l (- result 1)) |@true|)
         (EQ (sub_permut l (- result 1) t1 t0) |@true|))
(IMPLIES (AND (<= 0 (- (+ 1 r) l))
         (< (- (+ 1 r) (+ result 1)) (- (+ 1 r) l)))
(AND (<= 0 (+ result 1)) (< r (array_length t1)))))))))))))))))

;; quick_rec_po_6, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(IMPLIES (AND (AND (<= 0 l) (< l r)) (< r (array_length t)))
(FORALL (result)
(FORALL (t0)
(IMPLIES (AND (AND (<= l result) (<= result r))
         (AND (EQ (partition_p t0 l r result) |@true|)
         (EQ (sub_permut l r t0 t) |@true|)))
(IMPLIES (AND (<= 0 (- (+ 1 r) l))
         (< (- (+ 1 (- result 1)) l) (- (+ 1 r) l)))
(IMPLIES (AND (<= 0 l) (< (- result 1) (array_length t0)))
(FORALL (t1)
(IMPLIES (AND (EQ (sorted_array t1 l (- result 1)) |@true|)
         (EQ (sub_permut l (- result 1) t1 t0) |@true|))
(IMPLIES (AND (<= 0 (- (+ 1 r) l))
         (< (- (+ 1 r) (+ result 1)) (- (+ 1 r) l)))
(IMPLIES (AND (<= 0 (+ result 1)) (< r (array_length t1)))
(FORALL (t2)
(IMPLIES (AND (EQ (sorted_array t2 (+ result 1) r) |@true|)
         (EQ (sub_permut (+ result 1) r t2 t1) |@true|))
(AND (EQ (sorted_array t2 l r) |@true|) (EQ (sub_permut l r t2 t) |@true|)))))))))))))))))))

;; quick_rec_po_7, Why obligation from file "", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (>= l r)
(AND (EQ (sorted_array t l r) |@true|) (EQ (sub_permut l r t t) |@true|)))))))

;; quicksort_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(AND (<= 0 0) (< (- result 1) (array_length t))))))

;; quicksort_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (AND (<= 0 0) (< (- result 1) (array_length t)))
(FORALL (t0)
(IMPLIES (AND (EQ (sorted_array t0 0 (- result 1)) |@true|)
         (EQ (sub_permut 0 (- result 1) t0 t) |@true|))
(AND (EQ (sorted_array t0 0 (- (array_length t0) 1)) |@true|)
(EQ (permut t0 t) |@true|))))))))


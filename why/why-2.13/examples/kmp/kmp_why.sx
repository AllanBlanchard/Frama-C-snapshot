
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y)))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y)))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y)))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y)))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y)))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y)))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x) (FORALL (y) (EQ (ite |@true| x y) x))))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x) (FORALL (y) (EQ (ite |@false| x y) y))))

(BG_PUSH
 ;; Why axiom access_update
 (FORALL (t) (FORALL (i) (FORALL (v) (EQ (access (update t i v) i) v)))))

(BG_PUSH
 ;; Why axiom access_update_eq
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (FORALL (v) (IMPLIES (EQ i j) (EQ (access (update t i v) j) v))))))

 (FORALL (i)
 (FORALL (j)
 (IMPLIES (EQ i j)
 (FORALL (t) (FORALL (v) (EQ (access (update t i v) j) v)))))))

(BG_PUSH
 ;; Why axiom access_update_neq
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (FORALL (v) (IMPLIES (NEQ i j) (EQ (access (update t i v) j) (access t j)))))))

 (FORALL (i)
 (FORALL (j)
 (IMPLIES (NEQ i j)
 (FORALL (t) (FORALL (v) (EQ (access (update t i v) j) (access t j))))))))

(BG_PUSH
 ;; Why axiom sorted_array_def
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (sorted_array t i j) |@true|)
 (FORALL (k)
 (IMPLIES (AND (<= i k) (< k j)) (<= (access t k) (access t (+ k 1))))))))))

(BG_PUSH
 ;; Why axiom exchange_def
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (exchange t1 t2 i j) |@true|)
 (AND (EQ (array_length t1) (array_length t2))
 (AND (EQ (access t1 i) (access t2 j))
 (AND (EQ (access t2 i) (access t1 j))
 (FORALL (k)
 (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access t1 k) (access t2 k)))))))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t) (EQ (permut t t) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|) (EQ (permut t2 t1) |@true|)))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (IMPLIES (AND (EQ (permut t1 t2) |@true|) (EQ (permut t2 t3) |@true|))
 (EQ (permut t1 t3) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (EQ (permut t (update (update t i (access t j)) j (access t i))) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_refl
 (FORALL (t) (FORALL (g) (FORALL (d) (EQ (sub_permut g d t t) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (sub_permut g d t2 t1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|))))))))

 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_1
 (FORALL (t)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|)))))))

 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (FORALL (t)
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_2
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES
 (AND (<= g i)
 (AND (<= i d)
 (AND (<= g j) (AND (<= j d) (EQ (exchange t1 t2 i j) |@true|)))))
 (EQ (sub_permut g d t1 t2) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_permut
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|) (EQ (permut t1 t2) |@true|)))))))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (t)
 (FORALL (i)
 (FORALL (v) (EQ (array_length (update t i v)) (array_length t))))))

(BG_PUSH
 ;; Why axiom sub_permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))

;; initnext_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M) (AND (<= 0 1) (< 1 (array_length next)))))))

;; initnext_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0)) TRUE ; was well_founded
)))))))

;; initnext_po_3, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(AND (AND (<= 0 0) (<= 0 M))
(AND (AND (< 0 1) (<= 1 M))
(AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
(AND
(FORALL (z)
(IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
(NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
(AND
(FORALL (k)
(IMPLIES (AND (< 0 k) (<= k 1)) (EQ (Next p k (access next0 k)) |@true|)))
(EQ (array_length next0) M)))))))))))))

;; initnext_po_4, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1)) (AND (<= 0 i) (< i (array_length p))))))))))))))))

;; initnext_po_5, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i)) (AND (<= 0 j) (< j (array_length p)))))))))))))))))))

;; initnext_po_6, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (EQ result result0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(FORALL (j0)
(IMPLIES (EQ j0 (+ j 1)) (AND (<= 0 i0) (< i0 (array_length next1)))))))))))))))))))))))))))

;; initnext_po_7, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (EQ result result0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(FORALL (j0)
(IMPLIES (EQ j0 (+ j 1))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length next1)))
(FORALL (next2)
(IMPLIES (EQ next2 (update next1 i0 j0))
(AND
(AND (AND (<= 0 j0) (<= j0 M))
(AND (AND (< j0 i0) (<= i0 M))
(AND (EQ (match_ p (- i0 j0) p 0 j0) |@true|)
(AND
(FORALL (z)
(IMPLIES (AND (< (+ j0 1) z) (< z (+ i0 1)))
(NOT (EQ (match_ p (- (+ i0 1) z) p 0 z) |@true|))))
(AND
(FORALL (k)
(IMPLIES (AND (< 0 k) (<= k i0)) (EQ (Next p k (access next2 k)) |@true|)))
(EQ (array_length next2) M))))))
(EQ (lexZ (pairZ (- M i0) j0) (pairZ (- M i) j)) |@true|)))))))))))))))))))))))))))))

;; initnext_po_8, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (EQ j 0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1)) (AND (<= 0 i0) (< i0 (array_length next1))))))))))))))))))))))))))

;; initnext_po_9, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (EQ j 0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length next1)))
(FORALL (next2)
(IMPLIES (EQ next2 (update next1 i0 0))
(AND
(AND (AND (<= 0 j) (<= j M))
(AND (AND (< j i0) (<= i0 M))
(AND (EQ (match_ p (- i0 j) p 0 j) |@true|)
(AND
(FORALL (z)
(IMPLIES (AND (< (+ j 1) z) (< z (+ i0 1)))
(NOT (EQ (match_ p (- (+ i0 1) z) p 0 z) |@true|))))
(AND
(FORALL (k)
(IMPLIES (AND (< 0 k) (<= k i0)) (EQ (Next p k (access next2 k)) |@true|)))
(EQ (array_length next2) M))))))
(EQ (lexZ (pairZ (- M i0) j) (pairZ (- M i) j)) |@true|))))))))))))))))))))))))))))

;; initnext_po_10, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (NEQ j 0) (AND (<= 0 j) (< j (array_length next1))))))))))))))))))))))))

;; initnext_po_11, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (< i (- M 1))
(IMPLIES (AND (<= 0 i) (< i (array_length p)))
(FORALL (result)
(IMPLIES (EQ result (access p i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (NEQ j 0)
(IMPLIES (AND (<= 0 j) (< j (array_length next1)))
(FORALL (result1)
(IMPLIES (EQ result1 (access next1 j))
(FORALL (j0)
(IMPLIES (EQ j0 result1)
(AND
(AND (AND (<= 0 j0) (<= j0 M))
(AND (AND (< j0 i) (<= i M))
(AND (EQ (match_ p (- i j0) p 0 j0) |@true|)
(AND
(FORALL (z)
(IMPLIES (AND (< (+ j0 1) z) (< z (+ i 1)))
(NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
(AND
(FORALL (k)
(IMPLIES (AND (< 0 k) (<= k i)) (EQ (Next p k (access next1 k)) |@true|)))
(EQ (array_length next1) M))))))
(EQ (lexZ (pairZ (- M i) j0) (pairZ (- M i) j)) |@true|))))))))))))))))))))))))))))

;; initnext_po_12, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (< 1 M)
(IMPLIES (AND (<= 0 1) (< 1 (array_length next)))
(FORALL (next0)
(IMPLIES (EQ next0 (update next 1 0))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (< 0 1) (<= 1 M))
         (AND (EQ (match_ p (- 1 0) p 0 0) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ 0 1) z) (< z (+ 1 1)))
         (NOT (EQ (match_ p (- (+ 1 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k 1))
         (EQ (Next p k (access next0 k)) |@true|)))
         (EQ (array_length next0) M))))))
(FORALL (i)
(FORALL (j)
(FORALL (next1)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (< j i) (<= i M))
         (AND (EQ (match_ p (- i j) p 0 j) |@true|)
         (AND
         (FORALL (z)
         (IMPLIES (AND (< (+ j 1) z) (< z (+ i 1)))
         (NOT (EQ (match_ p (- (+ i 1) z) p 0 z) |@true|))))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< 0 k) (<= k i))
         (EQ (Next p k (access next1 k)) |@true|)))
         (EQ (array_length next1) M))))))
(IMPLIES (>= i (- M 1))
(AND (EQ (array_length next1) M)
(FORALL (j)
(IMPLIES (AND (< 0 j) (< j M)) (EQ (Next p j (access next1 j)) |@true|)))))))))))))))))

;; initnext_po_13, Why obligation from file "", line 0, characters 0-0:
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(IMPLIES (>= 1 M)
(AND (EQ (array_length next) M)
(FORALL (j)
(IMPLIES (AND (< 0 j) (< j M)) (EQ (Next p j (access next j)) |@true|))))))))

;; kmp_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(AND (EQ (array_length p) M) (EQ (array_length next) M))))))

;; kmp_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
TRUE ; was well_founded
)))))))

;; kmp_po_3, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(AND (AND (<= 0 0) (<= 0 M))
(AND (AND (<= 0 0) (<= 0 N))
(AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (- 0 0))) (NOT (EQ (match_ a k p 0 M) |@true|))))))))))))))

;; kmp_po_4, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M) (IMPLIES (< i N) (AND (<= 0 i) (< i (array_length a))))))))))))))))

;; kmp_po_5, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (< i N)
(IMPLIES (AND (<= 0 i) (< i (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a i)) (AND (<= 0 j) (< j (array_length p)))))))))))))))))))

;; kmp_po_6, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (< i N)
(IMPLIES (AND (<= 0 i) (< i (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (EQ result result0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(FORALL (j0)
(IMPLIES (EQ j0 (+ j 1))
(AND
(AND (AND (<= 0 j0) (<= j0 M))
(AND (AND (<= j0 i0) (<= i0 N))
(AND (EQ (match_ a (- i0 j0) p 0 j0) |@true|)
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (- i0 j0)))
(NOT (EQ (match_ a k p 0 M) |@true|)))))))
(EQ (lexZ (pairZ (- N i0) j0) (pairZ (- N i) j)) |@true|))))))))))))))))))))))))))

;; kmp_po_7, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (< i N)
(IMPLIES (AND (<= 0 i) (< i (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (EQ j 0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (AND (<= 0 j) (<= j M))
(AND (AND (<= j i0) (<= i0 N))
(AND (EQ (match_ a (- i0 j) p 0 j) |@true|)
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (- i0 j))) (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(EQ (lexZ (pairZ (- N i0) j) (pairZ (- N i) j)) |@true|)))))))))))))))))))))))))

;; kmp_po_8, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (< i N)
(IMPLIES (AND (<= 0 i) (< i (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (NEQ j 0) (AND (<= 0 j) (< j (array_length next0))))))))))))))))))))))))

;; kmp_po_9, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (< i N)
(IMPLIES (AND (<= 0 i) (< i (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a i))
(IMPLIES (AND (<= 0 j) (< j (array_length p)))
(FORALL (result0)
(IMPLIES (EQ result0 (access p j))
(IMPLIES (NOT (EQ result result0))
(IMPLIES (NEQ j 0)
(IMPLIES (AND (<= 0 j) (< j (array_length next0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access next0 j))
(FORALL (j0)
(IMPLIES (EQ j0 result1)
(AND
(AND (AND (<= 0 j0) (<= j0 M))
(AND (AND (<= j0 i) (<= i N))
(AND (EQ (match_ a (- i j0) p 0 j0) |@true|)
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (- i j0))) (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(EQ (lexZ (pairZ (- N i) j0) (pairZ (- N i) j)) |@true|))))))))))))))))))))))))))))

;; kmp_po_10, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (>= i N) (IMPLIES (EQ j M) (EQ (first_occur p a (- i M)) |@true|)))))))))))))))

;; kmp_po_11, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (< j M)
(IMPLIES (>= i N) (IMPLIES (NEQ j M) (EQ (first_occur p a i) |@true|)))))))))))))))

;; kmp_po_12, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (>= j M) (IMPLIES (EQ j M) (EQ (first_occur p a (- i M)) |@true|))))))))))))))

;; kmp_po_13, Why obligation from file "", line 0, characters 0-0:
(FORALL (a)
(FORALL (next)
(FORALL (p)
(IMPLIES (AND (EQ (array_length p) M)
         (AND (EQ (array_length next) M) (EQ (array_length a) N)))
(IMPLIES (AND (EQ (array_length p) M) (EQ (array_length next) M))
(FORALL (next0)
(IMPLIES (AND (EQ (array_length next0) M)
         (FORALL (j)
         (IMPLIES (AND (< 0 j) (< j M))
         (EQ (Next p j (access next0 j)) |@true|))))
(IMPLIES (AND (AND (<= 0 0) (<= 0 M))
         (AND (AND (<= 0 0) (<= 0 N))
         (AND (EQ (match_ a (- 0 0) p 0 0) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- 0 0)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(FORALL (i)
(FORALL (j)
(IMPLIES (AND (AND (<= 0 j) (<= j M))
         (AND (AND (<= j i) (<= i N))
         (AND (EQ (match_ a (- i j) p 0 j) |@true|)
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (- i j)))
         (NOT (EQ (match_ a k p 0 M) |@true|)))))))
(IMPLIES (>= j M) (IMPLIES (NEQ j M) (EQ (first_occur p a i) |@true|))))))))))))))


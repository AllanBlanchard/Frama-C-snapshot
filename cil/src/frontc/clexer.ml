# 46 "cil/src/frontc/clexer.mll"
 
open Cparser
open Pretty
exception Eof
exception InternalError of string
module E = Errormsg
module H = Hashtbl

let matchingParsOpen = ref 0

let currentLoc () = Cabshelper.currentLoc ()

let one_line_ghost = ref false
let is_oneline_ghost () = !one_line_ghost
let enter_oneline_ghost () = one_line_ghost := true
let exit_oneline_ghost () = one_line_ghost := false

(* string -> unit *)
let addComment c =
  let l = currentLoc() in
  let i = GrowArray.max_init_index Cabshelper.commentsGA in
  GrowArray.setg Cabshelper.commentsGA (i+1) (l,c,false)

(* track whitespace for the current token *)
let white = ref ""

let addWhite lexbuf = 
  if !Whitetrack.enabled then
    let w = Lexing.lexeme lexbuf in
    white := !white ^ w
let clear_white () = white := ""
let get_white () = !white

let lexeme = ref ""
let addLexeme lexbuf =
    let l = Lexing.lexeme lexbuf in
    lexeme := !lexeme ^ l
let clear_lexeme () = lexeme := ""
let get_extra_lexeme () = !lexeme

let int64_to_char value =
  if (compare value (Int64.of_int 255) > 0) || (compare value Int64.zero < 0) then
    begin
      let msg = Printf.sprintf "clexer:intlist_to_string: character 0x%Lx too big" value in
      E.parse_error msg;
    end
  else
    Char.chr (Int64.to_int value)

(* takes a not-nul-terminated list, and converts it to a string. *)
let rec intlist_to_string (str: int64 list):string =
  match str with
    [] -> ""  (* add nul-termination *)
  | value::rest ->
      let this_char = int64_to_char value in
      (String.make 1 this_char) ^ (intlist_to_string rest)

(* Some debugging support for line numbers *)
let dbgToken (t: token) =
  if false then begin
    ignore (E.log "%a" insert
              (match t with
                IDENT (n, l) -> dprintf "IDENT(%s,%d)\n" n (fst l).Lexing.pos_lnum
              | LBRACE l -> dprintf "LBRACE(%d)\n" (fst l).Lexing.pos_lnum
              | RBRACE l -> dprintf "RBRACE(%d)\n" (fst l).Lexing.pos_lnum
              | IF l -> dprintf "IF(%d)\n" (fst l).Lexing.pos_lnum
              | SWITCH l -> dprintf "SWITCH(%d)\n" (fst l).Lexing.pos_lnum
              | RETURN l -> dprintf "RETURN(%d)\n" (fst l).Lexing.pos_lnum
              | _ -> nil));
    t
  end else
    t

(*
** Keyword hashtable
*)
let lexicon = H.create 211
let init_lexicon _ =
  H.clear lexicon;
  List.iter
    (fun (key, builder) -> H.add lexicon key builder)
    [ ("auto", fun loc -> AUTO loc);
      ("const", fun loc -> CONST loc);
      ("__const", fun loc -> CONST loc);
      ("__const__", fun loc -> CONST loc);
      ("static", fun loc -> STATIC loc);
      ("extern", fun loc -> EXTERN loc);
      ("long", fun loc -> LONG loc);
      ("short", fun loc -> SHORT loc);
      ("register", fun loc -> REGISTER loc);
      ("signed", fun loc -> SIGNED loc);
      ("__signed", fun loc -> SIGNED loc);
      ("unsigned", fun loc -> UNSIGNED loc);
      ("volatile", fun loc -> VOLATILE loc);
      ("__volatile", fun loc -> VOLATILE loc);
      (* WW: see /usr/include/sys/cdefs.h for why __signed and __volatile
       * are accepted GCC-isms *)
      ("char", fun loc -> CHAR loc);
      ("_Bool", fun loc -> BOOL loc);
      ("int", fun loc -> INT loc);
      ("float", fun loc -> FLOAT loc);
      ("double", fun loc -> DOUBLE loc);
      ("void", fun loc -> VOID loc);
      ("enum", fun loc -> ENUM loc);
      ("struct", fun loc -> STRUCT loc);
      ("typedef", fun loc -> TYPEDEF loc);
      ("union", fun loc -> UNION loc);
      ("break", fun loc -> BREAK loc);
      ("continue", fun loc -> CONTINUE loc);
      ("goto", fun loc -> GOTO loc);
      ("return", fun loc -> dbgToken (RETURN loc));
      ("switch", fun loc -> dbgToken (SWITCH loc));
      ("case", fun loc -> CASE loc);
      ("default", fun loc -> DEFAULT loc);
      ("while", fun loc -> WHILE loc);
      ("do", fun loc -> DO loc);
      ("for", fun loc -> FOR loc);
      ("if", fun loc -> dbgToken (IF loc));
      ("else", fun _ -> ELSE);
      (*** Implementation specific keywords ***)
      ("__signed__", fun loc -> SIGNED loc);
      ("__inline__", fun loc -> INLINE loc);
      ("inline", fun loc -> INLINE loc);
      ("__inline", fun loc -> INLINE loc);
      ("_inline", fun loc ->
                      if !Cprint.msvcMode then
                        INLINE loc
                      else
                        IDENT ("_inline", loc));
      ("__attribute__", fun loc -> ATTRIBUTE loc);
      ("__attribute", fun loc -> ATTRIBUTE loc);
(*
      ("__attribute_used__", fun loc -> ATTRIBUTE_USED loc);
*)
      ("__blockattribute__", fun _ -> BLOCKATTRIBUTE);
      ("__blockattribute", fun _ -> BLOCKATTRIBUTE);
      ("__asm__", fun loc -> ASM loc);
      ("asm", fun loc -> ASM loc);
      ("__typeof__", fun loc -> TYPEOF loc);
      ("__typeof", fun loc -> TYPEOF loc);
      ("typeof", fun loc -> TYPEOF loc);
      ("__alignof", fun loc -> ALIGNOF loc);
      ("__alignof__", fun loc -> ALIGNOF loc);
      ("__volatile__", fun loc -> VOLATILE loc);
      ("__volatile", fun loc -> VOLATILE loc);

      ("__FUNCTION__", fun loc -> FUNCTION__ loc);
      ("__func__", fun loc -> FUNCTION__ loc); (* ISO 6.4.2.2 *)
      ("__PRETTY_FUNCTION__", fun loc -> PRETTY_FUNCTION__ loc);
      ("__label__", fun _ -> LABEL__);
      (*** weimer: GCC arcana ***)
      ("__restrict", fun loc -> RESTRICT loc);
      ("restrict", fun loc -> RESTRICT loc);
(*      ("__extension__", EXTENSION); *)
      (**** MS VC ***)
      ("__int64", fun _ -> INT64 (currentLoc ()));
      ("__int32", fun loc -> INT loc);
      ("_cdecl",  fun _ -> MSATTR ("_cdecl", currentLoc ()));
      ("__cdecl", fun _ -> MSATTR ("__cdecl", currentLoc ()));
      ("_stdcall", fun _ -> MSATTR ("_stdcall", currentLoc ()));
      ("__stdcall", fun _ -> MSATTR ("__stdcall", currentLoc ()));
      ("_fastcall", fun _ -> MSATTR ("_fastcall", currentLoc ()));
      ("__fastcall", fun _ -> MSATTR ("__fastcall", currentLoc ()));
      ("__w64", fun _ -> MSATTR("__w64", currentLoc ()));
      ("__declspec", fun loc -> DECLSPEC loc);
      ("__forceinline", fun loc -> INLINE loc); (* !! we turn forceinline
                                                 * into inline *)
      ("__try", fun loc -> TRY loc);
      ("__except", fun loc -> EXCEPT loc);
      ("__finally", fun loc -> FINALLY loc);
      (* weimer: some files produced by 'GCC -E' expect this type to be
       * defined *)
      ("__builtin_va_list",
       fun _ -> NAMED_TYPE ("__builtin_va_list", currentLoc ()));
      ("__builtin_va_arg", fun loc -> BUILTIN_VA_ARG loc);
      ("__builtin_types_compatible_p", fun loc -> BUILTIN_TYPES_COMPAT loc);
      ("__builtin_offsetof", fun loc -> BUILTIN_OFFSETOF loc);
      (* On some versions of GCC __thread is a regular identifier *)
      ("__thread", fun loc ->
                      if !Machdep.__thread_is_keyword then
                         THREAD loc
                       else
                         IDENT ("__thread", loc));
    ]

(* Mark an identifier as a type name. The old mapping is preserved and will
 * be reinstated when we exit this context *)
let add_type name =
   (* ignore (print_string ("adding type name " ^ name ^ "\n"));  *)
  H.add lexicon name (fun loc -> NAMED_TYPE (name, loc));
  H.add Logic_const.typenames name true

let context : string list list ref = ref [ [] ]

let push_context _ = context := []::!context

let pop_context _ =
  match !context with
    [] -> raise (InternalError "Empty context stack")
  | con::sub ->
		(context := sub;
		List.iter (fun name ->
                            (* Format.eprintf
                              "removing lexicon for %s@." name; *)
                             H.remove lexicon name;
                             H.remove Logic_const.typenames name
                          ) con)

(* Mark an identifier as a variable name. The old mapping is preserved and
 * will be reinstated when we exit this context  *)
let add_identifier name =
  match !context with
    [] -> raise (InternalError "Empty context stack")
  | con::sub ->
      (context := (name::con)::sub;
       (*Format.eprintf "adding IDENT for %s@." name;*)
       H.add lexicon name (fun loc ->
         dbgToken (IDENT (name, loc)));
       H.add Logic_const.typenames name false
      )


(*
** Useful primitives
*)
let scan_ident id =
  let here = currentLoc () in
  try (H.find lexicon id) here
  (* default to variable name, as opposed to type *)
  with Not_found -> dbgToken (IDENT (id, here))


(*
** Buffer processor
*)


let init ~(filename: string) : Lexing.lexbuf =
  init_lexicon ();
  (* Inititialize the pointer in Errormsg *)
  Lexerhack.add_type := add_type;
  Lexerhack.push_context := push_context;
  Lexerhack.pop_context := pop_context;
  Lexerhack.add_identifier := add_identifier;
  E.startParsing ~useBasename:false filename


let finish () =
  E.finishParsing ()

(*** Error handling ***)
let error msg =
  E.parse_error msg


(*** escape character management ***)
let scan_escape (char: char) : int64 =
  let result = match char with
    'n' -> '\n'
  | 'r' -> '\r'
  | 't' -> '\t'
  | 'b' -> '\b'
  | 'f' -> '\012'  (* ASCII code 12 *)
  | 'v' -> '\011'  (* ASCII code 11 *)
  | 'a' -> '\007'  (* ASCII code 7 *)
  | 'e' | 'E' -> '\027'  (* ASCII code 27. This is a GCC extension *)
  | '\'' -> '\''
  | '"'-> '"'     (* '"' *)
  | '?' -> '?'
  | '(' when not !Cprint.msvcMode -> '('
  | '{' when not !Cprint.msvcMode -> '{'
  | '[' when not !Cprint.msvcMode -> '['
  | '%' when not !Cprint.msvcMode -> '%'
  | '\\' -> '\\'
  | other -> error ("Unrecognized escape sequence: \\" ^ (String.make 1 other))
  in
  Int64.of_int (Char.code result)

let scan_hex_escape str =
  let radix = Int64.of_int 16 in
  let the_value = ref Int64.zero in
  (* start at character 2 to skip the \x *)
  for i = 2 to (String.length str) - 1 do
    let thisDigit = Cabshelper.valueOfDigit (String.get str i) in
    (* the_value := !the_value * 16 + thisDigit *)
    the_value := Int64.add (Int64.mul !the_value radix) thisDigit
  done;
  !the_value

let scan_oct_escape str =
  let radix = Int64.of_int 8 in
  let the_value = ref Int64.zero in
  (* start at character 1 to skip the \x *)
  for i = 1 to (String.length str) - 1 do
    let thisDigit = Cabshelper.valueOfDigit (String.get str i) in
    (* the_value := !the_value * 8 + thisDigit *)
    the_value := Int64.add (Int64.mul !the_value radix) thisDigit
  done;
  !the_value

let lex_hex_escape remainder lexbuf =
  let prefix = scan_hex_escape (Lexing.lexeme lexbuf) in
  prefix :: remainder lexbuf

let lex_oct_escape remainder lexbuf =
  let prefix = scan_oct_escape (Lexing.lexeme lexbuf) in
  prefix :: remainder lexbuf

let lex_simple_escape remainder lexbuf =
  let lexchar = Lexing.lexeme_char lexbuf 1 in
  let prefix = scan_escape lexchar in
  prefix :: remainder lexbuf

let lex_unescaped remainder lexbuf =
  let prefix = Int64.of_int (Char.code (Lexing.lexeme_char lexbuf 0)) in
  prefix :: remainder lexbuf

let lex_comment remainder lexbuf =
  let ch = Lexing.lexeme_char lexbuf 0 in
  let prefix = Int64.of_int (Char.code ch) in
  if ch = '\n' then E.newline();
  prefix :: remainder lexbuf

let make_char (i:int64):char =
  let min_val = Int64.zero in
  let max_val = Int64.of_int 255 in
  (* if i < 0 || i > 255 then error*)
  if compare i min_val < 0 || compare i max_val > 0 then begin
    let msg = Printf.sprintf "clexer:make_char: character 0x%Lx too big" i in
    error msg
  end;
  Char.chr (Int64.to_int i)


(* ISO standard locale-specific function to convert a wide character
 * into a sequence of normal characters. Here we work on strings.
 * We convert L"Hi" to "H\000i\000"
  matth: this seems unused.
let wbtowc wstr =
  let len = String.length wstr in
  let dest = String.make (len * 2) '\000' in
  for i = 0 to len-1 do
    dest.[i*2] <- wstr.[i] ;
  done ;
  dest
*)

(* This function converst the "Hi" in L"Hi" to { L'H', L'i', L'\0' }
  matth: this seems unused.
let wstr_to_warray wstr =
  let len = String.length wstr in
  let res = ref "{ " in
  for i = 0 to len-1 do
    res := !res ^ (Printf.sprintf "L'%c', " wstr.[i])
  done ;
  res := !res ^ "}" ;
  !res
*)

(* Pragmas get explicit end-of-line tokens.
 * Elsewhere they are silently discarded as whitespace. *)
let pragmaLine = ref false

let annot_char = ref '@'
let annot_start_pos = ref Cabshelper.cabslu
let buf = Buffer.create 1024

let save_current_pos () =
  annot_start_pos := currentLoc ()

let make_annot s =
  let start = snd !annot_start_pos in
  match Logic_lexer.annot (start, s) with
    | Logic_ptree.Adecl d -> DECL d
    | Logic_ptree.Aspec -> SPEC (start,s)
        (* At this point, we only have identified a function spec. Complete
           parsing of the annotation will only occur in the cparser.mly rule.
         *)
    | Logic_ptree.Acode_annot (loc,a) -> CODE_ANNOT (a, loc)
    | Logic_ptree.Aloop_annot (loc,a) -> LOOP_ANNOT (a,loc)
    | Logic_ptree.Aattribute_annot (loc,a) -> ATTRIBUTE_ANNOT (a, loc)

# 385 "cil/src/frontc/clexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\179\255\180\255\091\000\113\000\194\000\192\255\193\255\
    \194\255\195\255\196\255\197\255\198\255\199\255\200\255\201\255\
    \202\255\035\000\067\000\070\000\071\000\177\000\092\000\072\000\
    \089\000\093\000\074\000\091\000\015\001\027\001\065\001\244\255\
    \138\001\246\255\225\001\248\255\001\000\250\255\208\000\180\000\
    \232\255\127\000\094\001\254\255\252\255\249\255\005\000\056\002\
    \143\002\230\002\061\003\148\003\235\003\066\004\153\004\240\004\
    \071\005\158\005\245\005\076\006\163\006\250\006\081\007\168\007\
    \255\007\086\008\173\008\004\009\091\009\178\009\009\010\096\010\
    \183\010\014\011\243\255\245\255\091\011\106\001\125\011\095\000\
    \137\011\138\011\117\011\208\011\101\000\139\011\152\011\166\011\
    \185\000\079\001\064\001\103\011\130\000\186\000\083\001\100\001\
    \174\011\131\000\242\255\246\011\022\012\051\012\061\012\037\001\
    \090\012\214\001\100\012\132\002\161\012\199\012\130\000\126\001\
    \021\001\022\001\129\012\238\012\219\002\241\255\140\000\109\000\
    \110\000\167\000\013\013\046\013\078\013\050\003\178\000\236\255\
    \233\255\238\255\222\255\109\000\128\000\119\000\003\000\237\255\
    \216\255\235\255\214\255\215\255\234\255\231\255\206\255\230\255\
    \207\255\229\255\228\255\221\255\175\000\227\255\220\255\176\000\
    \226\255\223\255\122\013\209\013\040\014\127\014\214\014\142\000\
    \132\000\141\000\144\000\188\000\178\000\175\000\216\000\219\000\
    \237\000\245\000\030\001\236\000\245\000\244\000\186\255\004\001\
    \009\001\004\001\021\001\019\001\025\001\017\001\185\255\025\001\
    \028\001\184\255\034\001\044\001\183\255\021\002\253\255\100\001\
    \255\255\108\002\072\015\125\001\088\002\251\255\077\015\057\001\
    \070\001\087\015\180\003\124\001\213\001\079\011\102\011\112\001\
    \103\001\073\001\131\001\088\001\098\001\133\001\129\001\163\001\
    \186\001\011\004\136\015\173\001\177\001\219\001\187\001\201\001\
    \202\001\237\001\250\001\252\001\031\002\002\002\005\002\001\002\
    \006\002\012\002\009\002\044\002\251\255\041\002\082\002\049\002\
    \042\002\074\002\102\002\086\002\098\002\093\002\095\002\090\002\
    \102\002\123\002\125\002\127\002\136\002\144\002\173\002\188\002\
    \191\002\175\002\187\002\182\002\184\002\221\002\221\002\221\002\
    \219\002\216\002\018\003\025\003\020\003\002\003\007\003\014\003\
    \028\003\043\003\052\003\071\003\060\003\060\003\077\003\081\003\
    \084\003\078\003\079\003\093\003\097\003\087\003\112\003\094\003\
    \108\003\107\003\106\003\124\003\124\003\140\003\128\003\145\003\
    \175\003\157\003\169\003\164\003\167\003\054\012\188\011\098\004\
    \237\011\028\004\029\004\153\010\102\015\142\004\160\015\215\015\
    \060\005\150\010\239\015\147\005\253\015\056\016\234\005\131\013\
    \108\006\157\003\193\011\183\003\184\003\181\003\188\003\095\004\
    \194\003\215\003\212\003\212\003\116\004\026\004\014\005\227\003\
    \248\003\247\003\249\003\118\004";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\074\000\076\000\074\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\036\000\038\000\037\000\052\000\050\000\051\000\046\000\
    \043\000\042\000\047\000\044\000\064\000\016\000\016\000\255\255\
    \074\000\255\255\074\000\255\255\076\000\255\255\004\000\045\000\
    \255\255\002\000\000\000\255\255\255\255\255\255\255\255\074\000\
    \074\000\074\000\074\000\074\000\074\000\008\000\074\000\074\000\
    \074\000\074\000\066\000\074\000\074\000\074\000\074\000\067\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\073\000\255\255\255\255\255\255\255\255\013\000\255\255\
    \016\000\016\000\016\000\015\000\255\255\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\255\255\016\000\016\000\016\000\
    \016\000\255\255\255\255\255\255\013\000\255\255\013\000\255\255\
    \013\000\255\255\013\000\255\255\255\255\014\000\255\255\014\000\
    \014\000\014\000\255\255\013\000\255\255\255\255\014\000\014\000\
    \014\000\255\255\255\255\255\255\013\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\030\000\255\255\255\255\031\000\
    \255\255\255\255\074\000\074\000\074\000\074\000\065\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\068\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\
    \255\255\255\255\255\255\006\000\001\000\255\255\255\255\006\000\
    \006\000\002\000\001\000\255\255\002\000\002\000\002\000\002\000\
    \002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\005\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\003\000\001\000\
    \255\255\255\255\255\255\255\255\005\000\002\000\003\000\001\000\
    \002\000\255\255\005\000\002\000\003\000\001\000\002\000\255\255\
    \000\000\255\255\255\255\002\000\255\255\255\255\255\255\003\000\
    \255\255\255\255\255\255\255\255\255\255\003\000\002\000\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \000\000\044\000\043\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\255\255\000\000\190\000\000\000\255\255\
    \000\000\043\000\045\000\255\255\255\255\000\000\045\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\044\000\048\001\255\255\
    \048\001\190\000\043\000\037\000\044\000\255\255\255\255\255\255\
    \255\255\037\000\044\000\255\255\255\255\255\255\255\255\190\000\
    \255\255\043\000\190\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\044\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\043\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\038\000\037\000\045\000\038\000\038\000\046\000\045\000\
    \000\000\000\000\046\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\038\000\000\000\000\000\000\000\000\000\000\000\
    \038\000\026\000\031\000\035\000\135\000\023\000\021\000\033\000\
    \009\000\008\000\027\000\025\000\006\000\024\000\028\000\039\000\
    \030\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\015\000\007\000\019\000\017\000\018\000\016\000\
    \004\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\032\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\011\000\036\000\010\000\020\000\034\000\
    \153\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\005\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\013\000\022\000\012\000\014\000\003\000\
    \150\000\151\000\148\000\147\000\146\000\141\000\139\000\130\000\
    \136\000\255\255\129\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\097\000\140\000\138\000\
    \128\000\143\000\137\000\092\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\088\000\093\000\
    \121\000\117\000\003\000\131\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\160\000\144\000\
    \142\000\038\000\117\000\117\000\038\000\038\000\042\000\159\000\
    \127\000\117\000\132\000\041\000\161\000\162\000\003\000\078\000\
    \078\000\133\000\038\000\134\000\149\000\152\000\145\000\186\000\
    \038\000\040\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\183\000\175\000\077\000\077\000\
    \002\000\117\000\163\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\164\000\077\000\077\000\
    \165\000\003\000\166\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\154\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\126\000\167\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\078\000\168\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\169\000\
    \077\000\118\000\170\000\171\000\172\000\173\000\174\000\081\000\
    \255\255\176\000\117\000\117\000\177\000\178\000\078\000\078\000\
    \080\000\083\000\083\000\083\000\083\000\083\000\083\000\083\000\
    \083\000\029\000\029\000\179\000\180\000\078\000\181\000\255\255\
    \077\000\078\000\118\000\182\000\079\000\077\000\077\000\082\000\
    \255\255\184\000\117\000\117\000\088\000\081\000\185\000\187\000\
    \080\000\188\000\078\000\192\000\077\000\107\000\080\000\107\000\
    \077\000\076\000\106\000\106\000\106\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\088\000\077\000\077\000\197\000\
    \093\000\077\000\079\000\213\000\074\000\082\000\003\000\211\000\
    \093\000\075\000\210\000\190\000\077\000\190\000\080\000\190\000\
    \077\000\076\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\088\000\190\000\212\000\044\000\
    \093\000\077\000\119\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\190\000\214\000\110\000\
    \215\000\003\000\120\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \216\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\217\000\039\001\026\001\019\001\043\000\
    \005\001\208\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\048\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\252\000\251\000\203\000\191\000\
    \047\000\209\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\247\000\255\255\242\000\
    \239\000\196\000\238\000\231\000\196\000\196\000\237\000\230\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\196\000\232\000\233\000\234\000\192\000\235\000\
    \196\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\236\000\236\000\236\000\240\000\003\000\
    \241\000\056\000\003\000\003\000\003\000\054\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \055\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\106\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\236\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\243\000\244\000\245\000\246\000\236\000\248\000\249\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\250\000\236\000\236\000\253\000\003\000\254\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\049\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\255\255\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \255\000\000\001\001\001\002\001\003\001\004\001\236\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\006\001\007\001\008\001\009\001\003\000\010\001\050\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\124\000\124\000\124\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\192\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\011\001\
    \012\001\013\001\014\001\015\001\016\001\017\001\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \018\001\236\000\020\001\021\001\003\000\022\001\003\000\003\000\
    \003\000\003\000\003\000\003\000\051\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\023\001\024\001\025\001\236\000\202\000\027\001\028\001\
    \202\000\202\000\029\001\030\001\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\202\000\031\001\
    \032\001\033\001\034\001\035\001\202\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\036\001\
    \037\001\038\001\236\000\003\000\040\001\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\052\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \041\001\042\001\043\001\044\001\218\000\236\000\068\001\218\000\
    \218\000\069\001\192\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\218\000\192\000\192\000\
    \070\001\043\000\073\001\218\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\074\001\075\001\
    \192\000\192\000\003\000\080\001\053\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\081\001\
    \043\000\190\000\082\001\047\001\043\000\192\000\047\001\047\001\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\047\001\000\000\190\000\043\000\
    \192\000\000\000\047\001\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\255\255\077\001\043\000\
    \000\000\003\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\056\001\056\001\
    \056\001\056\001\056\001\056\001\056\001\056\001\072\001\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\064\000\003\000\003\000\003\000\000\000\000\000\043\000\
    \000\000\000\000\000\000\043\000\043\000\255\255\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\043\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\043\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\059\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\190\000\190\000\190\000\190\000\
    \190\000\190\000\190\000\190\000\043\000\079\001\255\255\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\003\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\057\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\062\001\062\001\062\001\062\001\062\001\
    \062\001\062\001\062\001\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\058\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\190\000\190\000\190\000\190\000\190\000\190\000\
    \190\000\190\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\064\001\000\000\000\000\
    \064\001\064\001\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\064\001\000\000\
    \000\000\000\000\000\000\000\000\064\001\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\060\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\003\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\061\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\003\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\062\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\063\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\003\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\065\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\066\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\067\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\068\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\003\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\069\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\003\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\070\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\071\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\192\000\000\000\192\000\000\000\072\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\058\001\000\000\000\000\052\001\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\073\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\108\000\000\000\109\000\109\000\109\000\109\000\109\000\
    \109\000\109\000\109\000\109\000\109\000\078\000\197\000\000\000\
    \000\000\197\000\000\000\207\000\109\000\109\000\109\000\109\000\
    \109\000\109\000\000\000\078\000\190\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\077\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\078\000\
    \078\000\078\000\077\000\190\000\109\000\109\000\109\000\109\000\
    \109\000\109\000\099\000\098\000\190\000\255\255\078\000\000\000\
    \255\255\098\000\093\000\192\000\077\000\000\000\077\000\077\000\
    \077\000\000\000\207\000\088\000\078\000\095\000\094\000\090\000\
    \000\000\000\000\077\000\190\000\078\000\077\000\190\000\093\000\
    \000\000\094\000\099\000\098\000\089\000\000\000\000\000\000\000\
    \000\000\098\000\093\000\077\000\000\000\088\000\077\000\077\000\
    \077\000\000\000\079\000\077\000\084\000\096\000\255\255\091\000\
    \000\000\255\255\000\000\088\000\192\000\077\000\078\000\093\000\
    \083\000\083\000\083\000\083\000\083\000\083\000\083\000\083\000\
    \029\000\029\000\000\000\077\000\000\000\088\000\000\000\190\000\
    \000\000\000\000\089\000\077\000\000\000\077\000\000\000\000\000\
    \000\000\000\000\093\000\088\000\086\000\000\000\000\000\000\000\
    \067\001\105\000\000\000\105\000\000\000\085\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \000\000\000\000\000\000\000\000\000\000\077\000\000\000\000\000\
    \000\000\084\000\000\000\000\000\087\000\000\000\192\000\047\001\
    \192\000\000\000\047\001\047\001\000\000\085\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \047\001\000\000\000\000\000\000\000\000\000\000\047\001\000\000\
    \046\001\000\000\000\000\101\000\098\000\000\000\103\000\000\000\
    \103\000\000\000\098\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\000\000\
    \000\000\000\000\000\000\101\000\098\000\000\000\000\000\000\000\
    \000\000\000\000\098\000\098\000\000\000\000\000\000\000\000\000\
    \000\000\098\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\106\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\000\000\000\000\
    \098\000\000\000\000\000\098\000\000\000\000\000\098\000\000\000\
    \000\000\098\000\098\000\000\000\116\000\000\000\116\000\000\000\
    \098\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\000\000\255\255\000\000\000\000\000\000\
    \098\000\255\255\000\000\000\000\000\000\000\000\098\000\000\000\
    \000\000\000\000\098\000\000\000\000\000\000\000\000\000\000\000\
    \098\000\122\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \122\000\122\000\122\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\108\000\000\000\109\000\
    \109\000\109\000\109\000\109\000\109\000\109\000\109\000\109\000\
    \109\000\000\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \109\000\109\000\109\000\109\000\109\000\109\000\000\000\000\000\
    \000\000\000\000\000\000\112\000\000\000\000\000\000\000\114\000\
    \000\000\000\000\000\000\000\000\111\000\000\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \109\000\109\000\109\000\109\000\109\000\109\000\000\000\000\000\
    \110\000\000\000\000\000\113\000\098\000\000\000\255\255\114\000\
    \000\000\000\000\098\000\000\000\111\000\122\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\122\000\122\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\098\000\000\000\000\000\000\000\
    \000\000\125\000\098\000\125\000\000\000\123\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\124\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\123\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\124\000\
    \000\000\000\000\000\000\000\000\064\001\000\000\000\000\064\001\
    \064\001\000\000\000\000\000\000\098\000\000\000\000\000\000\000\
    \000\000\000\000\098\000\000\000\000\000\064\001\003\000\000\000\
    \000\000\000\000\000\000\064\001\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\098\000\000\000\000\000\000\000\
    \000\000\000\000\098\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\003\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\155\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\043\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\003\000\003\000\003\000\156\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\255\255\000\000\000\000\000\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\157\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\003\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\158\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\196\000\192\000\000\000\196\000\196\000\202\000\192\000\
    \000\000\202\000\202\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\196\000\000\000\000\000\000\000\000\000\202\000\
    \196\000\000\000\037\000\000\000\000\000\202\000\000\000\000\000\
    \190\000\044\000\000\000\000\000\000\000\000\000\000\000\195\000\
    \000\000\000\000\000\000\000\000\000\000\201\000\201\000\201\000\
    \201\000\201\000\201\000\201\000\201\000\201\000\201\000\201\000\
    \201\000\201\000\201\000\201\000\201\000\201\000\201\000\201\000\
    \201\000\218\000\000\000\000\000\218\000\218\000\053\001\053\001\
    \053\001\053\001\053\001\053\001\053\001\053\001\000\000\000\000\
    \000\000\000\000\218\000\205\000\000\000\000\000\000\000\000\000\
    \218\000\000\000\000\000\000\000\204\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\200\000\000\000\000\000\000\000\199\000\054\001\000\000\
    \203\000\000\000\000\000\206\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\204\000\000\000\000\000\228\000\
    \055\001\055\001\055\001\055\001\055\001\055\001\055\001\055\001\
    \055\001\055\001\000\000\000\000\221\000\000\000\054\001\000\000\
    \000\000\055\001\055\001\055\001\055\001\055\001\055\001\000\000\
    \000\000\224\000\000\000\000\000\000\000\000\000\000\000\220\000\
    \000\000\227\000\000\000\000\000\219\000\000\000\000\000\225\000\
    \000\000\000\000\222\000\226\000\000\000\223\000\000\000\229\000\
    \000\000\055\001\055\001\055\001\055\001\055\001\055\001\055\001\
    \055\001\055\001\055\001\055\001\055\001\055\001\055\001\055\001\
    \055\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \055\001\055\001\055\001\055\001\055\001\055\001\000\000\059\001\
    \059\001\059\001\059\001\059\001\059\001\059\001\059\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\061\001\061\001\061\001\
    \061\001\061\001\061\001\061\001\061\001\061\001\061\001\000\000\
    \055\001\055\001\055\001\055\001\055\001\055\001\061\001\061\001\
    \061\001\061\001\061\001\061\001\000\000\000\000\000\000\060\001\
    \255\255\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\061\001\061\001\
    \061\001\061\001\061\001\061\001\000\000\000\000\255\255\060\001\
    \061\001\061\001\061\001\061\001\061\001\061\001\061\001\061\001\
    \061\001\061\001\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\061\001\061\001\061\001\061\001\061\001\061\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\061\001\061\001\061\001\061\001\061\001\061\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\036\000\000\000\000\000\036\000\046\000\
    \255\255\255\255\046\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\134\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \018\000\018\000\019\000\019\000\020\000\023\000\024\000\026\000\
    \025\000\041\000\027\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\079\000\024\000\024\000\
    \027\000\022\000\025\000\084\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\092\000\097\000\
    \110\000\119\000\003\000\026\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\004\000\021\000\
    \022\000\038\000\120\000\121\000\038\000\038\000\039\000\004\000\
    \126\000\118\000\131\000\039\000\004\000\004\000\005\000\088\000\
    \093\000\132\000\038\000\133\000\148\000\151\000\021\000\159\000\
    \038\000\039\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\160\000\161\000\088\000\093\000\
    \000\000\118\000\162\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\163\000\088\000\093\000\
    \164\000\005\000\165\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\028\000\166\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\029\000\167\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\103\000\103\000\103\000\
    \103\000\103\000\103\000\103\000\103\000\103\000\103\000\168\000\
    \029\000\112\000\169\000\170\000\171\000\172\000\173\000\029\000\
    \042\000\175\000\112\000\113\000\176\000\177\000\090\000\030\000\
    \029\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\178\000\179\000\089\000\180\000\041\000\
    \029\000\094\000\113\000\181\000\029\000\090\000\030\000\029\000\
    \042\000\183\000\112\000\113\000\090\000\030\000\184\000\186\000\
    \029\000\187\000\095\000\191\000\089\000\077\000\030\000\077\000\
    \094\000\030\000\077\000\077\000\077\000\077\000\077\000\077\000\
    \077\000\077\000\077\000\077\000\089\000\090\000\030\000\195\000\
    \094\000\095\000\030\000\199\000\032\000\030\000\032\000\200\000\
    \095\000\032\000\203\000\208\000\089\000\209\000\030\000\210\000\
    \094\000\030\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\089\000\207\000\211\000\212\000\
    \094\000\095\000\111\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\207\000\213\000\111\000\
    \214\000\032\000\111\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\034\000\105\000\105\000\
    \105\000\105\000\105\000\105\000\105\000\105\000\105\000\105\000\
    \215\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\216\000\219\000\220\000\221\000\189\000\
    \222\000\204\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\223\000\224\000\204\000\189\000\
    \034\000\204\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\047\000\225\000\042\000\226\000\
    \227\000\196\000\228\000\229\000\196\000\196\000\230\000\229\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\196\000\231\000\232\000\233\000\193\000\234\000\
    \196\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\235\000\237\000\238\000\239\000\047\000\
    \240\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\048\000\107\000\107\000\107\000\107\000\
    \107\000\107\000\107\000\107\000\107\000\107\000\241\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\242\000\243\000\244\000\245\000\246\000\247\000\248\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\249\000\250\000\251\000\252\000\048\000\253\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\049\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\189\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \254\000\255\000\000\001\001\001\002\001\003\001\004\001\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\005\001\006\001\007\001\008\001\049\000\009\001\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\050\000\125\000\125\000\125\000\125\000\125\000\125\000\
    \125\000\125\000\125\000\125\000\193\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\010\001\
    \011\001\012\001\013\001\014\001\015\001\016\001\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \017\001\018\001\019\001\020\001\050\000\021\001\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \051\000\022\001\023\001\024\001\025\001\202\000\026\001\027\001\
    \202\000\202\000\028\001\029\001\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\202\000\030\001\
    \031\001\032\001\033\001\034\001\202\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\035\001\
    \036\001\037\001\038\001\051\000\039\001\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\052\000\
    \040\001\041\001\042\001\043\001\217\000\044\001\067\001\217\000\
    \217\000\068\001\065\001\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\217\000\049\001\050\001\
    \069\001\070\001\072\001\217\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\073\001\074\001\
    \075\001\077\001\052\000\079\001\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\053\000\080\001\
    \071\001\071\001\081\001\047\001\071\001\082\001\047\001\047\001\
    \255\255\255\255\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\047\001\255\255\076\001\071\001\
    \083\001\255\255\047\001\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\065\001\076\001\071\001\
    \255\255\053\000\255\255\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\054\000\053\001\053\001\
    \053\001\053\001\053\001\053\001\053\001\053\001\071\001\255\255\
    \255\255\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\255\255\255\255\255\255\255\255\
    \054\000\255\255\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\055\000\255\255\255\255\078\001\
    \255\255\255\255\255\255\078\001\049\001\050\001\255\255\255\255\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\255\255\255\255\255\255\255\255\078\001\255\255\
    \255\255\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\255\255\255\255\255\255\078\001\055\000\
    \255\255\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\056\000\056\001\056\001\056\001\056\001\
    \056\001\056\001\056\001\056\001\076\001\078\001\083\001\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\255\255\255\255\255\255\255\255\056\000\255\255\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\057\000\059\001\059\001\059\001\059\001\059\001\
    \059\001\059\001\059\001\255\255\255\255\255\255\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\255\255\255\255\255\255\255\255\057\000\255\255\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\058\000\062\001\062\001\062\001\062\001\062\001\062\001\
    \062\001\062\001\255\255\255\255\255\255\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \255\255\255\255\255\255\255\255\058\000\255\255\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \059\000\255\255\255\255\255\255\255\255\064\001\255\255\255\255\
    \064\001\064\001\255\255\255\255\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\064\001\255\255\
    \255\255\255\255\255\255\255\255\064\001\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\255\255\
    \255\255\255\255\255\255\059\000\255\255\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\060\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\255\255\255\255\
    \255\255\255\255\060\000\255\255\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\061\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\255\255\255\255\255\255\
    \255\255\061\000\255\255\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\062\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\255\255\255\255\255\255\255\255\
    \062\000\255\255\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\063\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\255\255\255\255\255\255\255\255\063\000\
    \255\255\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\064\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\255\255\255\255\255\255\255\255\064\000\255\255\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\065\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\255\255\255\255\255\255\255\255\065\000\255\255\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\066\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \255\255\255\255\255\255\255\255\066\000\255\255\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \067\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\255\255\
    \255\255\255\255\255\255\067\000\255\255\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\068\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\068\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\255\255\255\255\
    \255\255\255\255\068\000\255\255\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\069\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\255\255\255\255\255\255\
    \255\255\069\000\255\255\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\070\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\255\255\255\255\255\255\255\255\
    \070\000\255\255\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\071\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\051\001\255\255\057\001\255\255\071\000\
    \255\255\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\072\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\255\255\057\001\255\255\255\255\051\001\255\255\255\255\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\255\255\255\255\255\255\255\255\072\000\255\255\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\073\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\255\255\255\255\255\255\255\255\073\000\255\255\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\076\000\255\255\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\091\000\057\001\255\255\
    \255\255\051\001\255\255\205\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\255\255\082\000\205\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\091\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\078\000\080\000\
    \081\000\085\000\082\000\206\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\078\000\078\000\205\000\046\001\086\000\255\255\
    \046\001\078\000\082\000\066\001\091\000\255\255\080\000\081\000\
    \085\000\255\255\206\000\091\000\087\000\080\000\081\000\085\000\
    \255\255\255\255\082\000\206\000\096\000\086\000\046\001\081\000\
    \255\255\082\000\078\000\078\000\086\000\255\255\255\255\255\255\
    \255\255\078\000\082\000\087\000\255\255\086\000\080\000\081\000\
    \085\000\255\255\080\000\096\000\085\000\080\000\048\001\085\000\
    \255\255\048\001\255\255\087\000\066\001\086\000\083\000\081\000\
    \083\000\083\000\083\000\083\000\083\000\083\000\083\000\083\000\
    \083\000\083\000\255\255\087\000\255\255\086\000\255\255\048\001\
    \255\255\255\255\087\000\096\000\255\255\083\000\255\255\255\255\
    \255\255\255\255\096\000\087\000\083\000\255\255\255\255\255\255\
    \066\001\099\000\255\255\099\000\255\255\083\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\099\000\099\000\
    \255\255\255\255\255\255\255\255\255\255\083\000\255\255\255\255\
    \255\255\083\000\255\255\255\255\083\000\255\255\066\001\045\001\
    \045\001\255\255\045\001\045\001\255\255\083\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \045\001\255\255\255\255\255\255\255\255\255\255\045\001\255\255\
    \045\001\255\255\255\255\100\000\100\000\255\255\101\000\255\255\
    \101\000\255\255\100\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\255\255\
    \255\255\255\255\255\255\100\000\100\000\255\255\255\255\255\255\
    \255\255\255\255\100\000\102\000\255\255\255\255\255\255\255\255\
    \255\255\102\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\106\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\255\255\255\255\
    \104\000\255\255\255\255\102\000\255\255\255\255\104\000\255\255\
    \255\255\102\000\106\000\255\255\114\000\255\255\114\000\255\255\
    \106\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\255\255\046\001\255\255\255\255\255\255\
    \104\000\066\001\255\255\255\255\255\255\255\255\104\000\255\255\
    \255\255\255\255\106\000\255\255\255\255\255\255\255\255\255\255\
    \106\000\108\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \108\000\108\000\108\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\108\000\108\000\108\000\108\000\108\000\108\000\
    \255\255\255\255\255\255\255\255\255\255\048\001\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\109\000\255\255\109\000\
    \109\000\109\000\109\000\109\000\109\000\109\000\109\000\109\000\
    \109\000\255\255\108\000\108\000\108\000\108\000\108\000\108\000\
    \109\000\109\000\109\000\109\000\109\000\109\000\255\255\255\255\
    \255\255\255\255\255\255\109\000\255\255\255\255\255\255\109\000\
    \255\255\255\255\255\255\255\255\109\000\255\255\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \109\000\109\000\109\000\109\000\109\000\109\000\255\255\255\255\
    \109\000\255\255\255\255\109\000\115\000\255\255\045\001\109\000\
    \255\255\255\255\115\000\255\255\109\000\122\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\122\000\122\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\122\000\122\000\
    \122\000\122\000\122\000\122\000\115\000\255\255\255\255\255\255\
    \255\255\123\000\115\000\123\000\255\255\122\000\123\000\123\000\
    \123\000\123\000\123\000\123\000\123\000\123\000\123\000\123\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\122\000\122\000\
    \122\000\122\000\122\000\122\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\122\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\124\000\
    \255\255\255\255\255\255\255\255\063\001\255\255\255\255\063\001\
    \063\001\255\255\255\255\255\255\124\000\255\255\255\255\255\255\
    \255\255\255\255\124\000\255\255\255\255\063\001\154\000\255\255\
    \255\255\255\255\255\255\063\001\255\255\255\255\255\255\255\255\
    \255\255\255\255\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\124\000\255\255\255\255\255\255\
    \255\255\255\255\124\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\255\255\255\255\255\255\
    \255\255\154\000\255\255\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\155\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\063\001\255\255\
    \255\255\155\000\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\155\000\255\255\255\255\255\255\255\255\
    \155\000\255\255\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\155\000\156\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \156\000\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\063\001\255\255\255\255\255\255\156\000\
    \255\255\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\157\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\157\000\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\255\255\255\255\255\255\255\255\157\000\255\255\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\158\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\158\000\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\255\255\255\255\255\255\255\255\158\000\255\255\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\158\000\158\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\194\000\194\000\255\255\194\000\194\000\198\000\198\000\
    \255\255\198\000\198\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\194\000\255\255\255\255\255\255\255\255\198\000\
    \194\000\255\255\194\000\255\255\255\255\198\000\255\255\255\255\
    \194\000\194\000\255\255\255\255\255\255\255\255\255\255\194\000\
    \255\255\255\255\255\255\255\255\255\255\198\000\198\000\198\000\
    \198\000\198\000\198\000\198\000\198\000\198\000\198\000\201\000\
    \201\000\201\000\201\000\201\000\201\000\201\000\201\000\201\000\
    \201\000\218\000\255\255\255\255\218\000\218\000\052\001\052\001\
    \052\001\052\001\052\001\052\001\052\001\052\001\255\255\255\255\
    \255\255\255\255\218\000\201\000\255\255\255\255\255\255\255\255\
    \218\000\255\255\255\255\255\255\201\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\198\000\255\255\255\255\255\255\198\000\052\001\255\255\
    \201\000\255\255\255\255\201\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\201\000\255\255\255\255\218\000\
    \054\001\054\001\054\001\054\001\054\001\054\001\054\001\054\001\
    \054\001\054\001\255\255\255\255\218\000\255\255\052\001\255\255\
    \255\255\054\001\054\001\054\001\054\001\054\001\054\001\255\255\
    \255\255\218\000\255\255\255\255\255\255\255\255\255\255\218\000\
    \255\255\218\000\255\255\255\255\218\000\255\255\255\255\218\000\
    \255\255\255\255\218\000\218\000\255\255\218\000\255\255\218\000\
    \255\255\054\001\054\001\054\001\054\001\054\001\054\001\055\001\
    \055\001\055\001\055\001\055\001\055\001\055\001\055\001\055\001\
    \055\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \055\001\055\001\055\001\055\001\055\001\055\001\255\255\058\001\
    \058\001\058\001\058\001\058\001\058\001\058\001\058\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\060\001\060\001\060\001\
    \060\001\060\001\060\001\060\001\060\001\060\001\060\001\255\255\
    \055\001\055\001\055\001\055\001\055\001\055\001\060\001\060\001\
    \060\001\060\001\060\001\060\001\255\255\255\255\255\255\058\001\
    \194\000\255\255\255\255\255\255\255\255\198\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\060\001\060\001\
    \060\001\060\001\060\001\060\001\255\255\255\255\052\001\058\001\
    \061\001\061\001\061\001\061\001\061\001\061\001\061\001\061\001\
    \061\001\061\001\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\061\001\061\001\061\001\061\001\061\001\061\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\061\001\061\001\061\001\061\001\061\001\061\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\058\001\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_backtrk_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_default_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_trans_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\001\000\000\000\001\000\001\000\001\000\001\000\001\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\
    \001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check_code = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\217\000\255\255\218\000\217\000\217\000\218\000\218\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\217\000\255\255\218\000\255\255\255\255\255\255\
    \217\000\255\255\218\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_code = 
   "\255\001\255\255\000\001\255";
}

let rec initial lexbuf =
    __ocaml_lex_initial_rec lexbuf 0
and __ocaml_lex_initial_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 481 "cil/src/frontc/clexer.mll"
               ( let il = comment lexbuf in
	                                  let sl = intlist_to_string il in
					  addComment sl;
                                          addWhite lexbuf;
                                          initial lexbuf)
# 1840 "cil/src/frontc/clexer.ml"

  | 1 ->
let
# 487 "cil/src/frontc/clexer.mll"
                        c
# 1846 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 2) in
# 487 "cil/src/frontc/clexer.mll"
                                        ( if c = !annot_char then begin
	                                    try
                                              save_current_pos ();
	                                      Buffer.clear buf;
	                                      annot_first_token lexbuf
                                            with Parsing.Parse_error->
                                              Cabshelper.warn_skip_logic ();
                                              initial lexbuf
                                          end else begin
                                          let il = comment lexbuf in
	                                  let sl = intlist_to_string il in
					  addComment sl;
                                          addWhite lexbuf;
                                          initial lexbuf
                                          end )
# 1864 "cil/src/frontc/clexer.ml"

  | 2 ->
# 504 "cil/src/frontc/clexer.mll"
    (
      let il = onelinecomment lexbuf in
      let sl = intlist_to_string il in
      addComment sl; E.newline();
      if is_oneline_ghost () then begin
        exit_oneline_ghost ();
        RGHOST
      end else begin
        addWhite lexbuf;
        initial lexbuf
      end
    )
# 1880 "cil/src/frontc/clexer.ml"

  | 3 ->
let
# 517 "cil/src/frontc/clexer.mll"
                    c
# 1886 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 2) in
# 518 "cil/src/frontc/clexer.mll"
    ( if c = !annot_char then begin
      try
        save_current_pos ();
	Buffer.clear buf;
	annot_one_line lexbuf
      with Parsing.Parse_error->
        Cabshelper.warn_skip_logic ();
        initial lexbuf
    end else begin
      let il = onelinecomment lexbuf in
      let sl = intlist_to_string il in
      addComment sl; E.newline();
      if is_oneline_ghost () then begin
        exit_oneline_ghost ();
        RGHOST
      end else begin
        addWhite lexbuf;
        initial lexbuf
      end
    end
    )
# 1910 "cil/src/frontc/clexer.ml"

  | 4 ->
# 539 "cil/src/frontc/clexer.mll"
           (addWhite lexbuf; initial lexbuf)
# 1915 "cil/src/frontc/clexer.ml"

  | 5 ->
# 540 "cil/src/frontc/clexer.mll"
                                        ( E.newline ();
                                          if !pragmaLine then
                                            begin
                                              pragmaLine := false;
                                              PRAGMA_EOL
                                            end
                                          else if is_oneline_ghost () then
                                            begin
                                              exit_oneline_ghost ();
                                              RGHOST
                                            end
                                          else begin
                                            addWhite lexbuf;
                                            initial lexbuf
                                          end )
# 1934 "cil/src/frontc/clexer.ml"

  | 6 ->
# 555 "cil/src/frontc/clexer.mll"
                                        ( addWhite lexbuf;
                                          E.newline ();
                                          initial lexbuf
                                        )
# 1942 "cil/src/frontc/clexer.ml"

  | 7 ->
# 559 "cil/src/frontc/clexer.mll"
         ( addWhite lexbuf; hash lexbuf)
# 1947 "cil/src/frontc/clexer.ml"

  | 8 ->
# 560 "cil/src/frontc/clexer.mll"
                                   ( PRAGMA (currentLoc ()) )
# 1952 "cil/src/frontc/clexer.ml"

  | 9 ->
# 561 "cil/src/frontc/clexer.mll"
          ( CST_CHAR (chr lexbuf, currentLoc ()))
# 1957 "cil/src/frontc/clexer.ml"

  | 10 ->
# 562 "cil/src/frontc/clexer.mll"
          ( CST_WCHAR (chr lexbuf, currentLoc ()) )
# 1962 "cil/src/frontc/clexer.ml"

  | 11 ->
# 563 "cil/src/frontc/clexer.mll"
         (  addLexeme lexbuf; (* '"' *)
(* matth: BUG:  this could be either a regular string or a wide string.
 *  e.g. if it's the "world" in
 *     L"Hello, " "world"
 *  then it should be treated as wide even though there's no L immediately
 *  preceding it.  See test/small1/wchar5.c for a failure case. *)
                                          try CST_STRING (str lexbuf, currentLoc ())
                                          with e ->
                                             raise (InternalError
                                                     ("str: " ^
                                                      Printexc.to_string e)))
# 1977 "cil/src/frontc/clexer.ml"

  | 12 ->
# 574 "cil/src/frontc/clexer.mll"
           ( (* weimer: wchar_t string literal *)
                                          try CST_WSTRING(str lexbuf, currentLoc ())
                                          with e ->
                                             raise (InternalError
                                                     ("wide string: " ^
                                                      Printexc.to_string e)))
# 1987 "cil/src/frontc/clexer.ml"

  | 13 ->
# 580 "cil/src/frontc/clexer.mll"
             (CST_FLOAT (Lexing.lexeme lexbuf, currentLoc ()))
# 1992 "cil/src/frontc/clexer.ml"

  | 14 ->
# 581 "cil/src/frontc/clexer.mll"
            (CST_INT (Lexing.lexeme lexbuf, currentLoc ()))
# 1997 "cil/src/frontc/clexer.ml"

  | 15 ->
# 582 "cil/src/frontc/clexer.mll"
            (CST_INT (Lexing.lexeme lexbuf, currentLoc ()))
# 2002 "cil/src/frontc/clexer.ml"

  | 16 ->
# 583 "cil/src/frontc/clexer.mll"
            (CST_INT (Lexing.lexeme lexbuf, currentLoc ()))
# 2007 "cil/src/frontc/clexer.ml"

  | 17 ->
# 584 "cil/src/frontc/clexer.mll"
                                        ( RGHOST )
# 2012 "cil/src/frontc/clexer.ml"

  | 18 ->
# 585 "cil/src/frontc/clexer.mll"
             (EOF)
# 2017 "cil/src/frontc/clexer.ml"

  | 19 ->
# 586 "cil/src/frontc/clexer.mll"
           (ELLIPSIS)
# 2022 "cil/src/frontc/clexer.ml"

  | 20 ->
# 587 "cil/src/frontc/clexer.mll"
          (PLUS_EQ)
# 2027 "cil/src/frontc/clexer.ml"

  | 21 ->
# 588 "cil/src/frontc/clexer.mll"
          (MINUS_EQ)
# 2032 "cil/src/frontc/clexer.ml"

  | 22 ->
# 589 "cil/src/frontc/clexer.mll"
          (STAR_EQ)
# 2037 "cil/src/frontc/clexer.ml"

  | 23 ->
# 590 "cil/src/frontc/clexer.mll"
          (SLASH_EQ)
# 2042 "cil/src/frontc/clexer.ml"

  | 24 ->
# 591 "cil/src/frontc/clexer.mll"
          (PERCENT_EQ)
# 2047 "cil/src/frontc/clexer.ml"

  | 25 ->
# 592 "cil/src/frontc/clexer.mll"
          (PIPE_EQ)
# 2052 "cil/src/frontc/clexer.ml"

  | 26 ->
# 593 "cil/src/frontc/clexer.mll"
          (AND_EQ)
# 2057 "cil/src/frontc/clexer.ml"

  | 27 ->
# 594 "cil/src/frontc/clexer.mll"
          (CIRC_EQ)
# 2062 "cil/src/frontc/clexer.ml"

  | 28 ->
# 595 "cil/src/frontc/clexer.mll"
           (INF_INF_EQ)
# 2067 "cil/src/frontc/clexer.ml"

  | 29 ->
# 596 "cil/src/frontc/clexer.mll"
           (SUP_SUP_EQ)
# 2072 "cil/src/frontc/clexer.ml"

  | 30 ->
# 597 "cil/src/frontc/clexer.mll"
          (INF_INF)
# 2077 "cil/src/frontc/clexer.ml"

  | 31 ->
# 598 "cil/src/frontc/clexer.mll"
          (SUP_SUP)
# 2082 "cil/src/frontc/clexer.ml"

  | 32 ->
# 599 "cil/src/frontc/clexer.mll"
           (EQ_EQ)
# 2087 "cil/src/frontc/clexer.ml"

  | 33 ->
# 600 "cil/src/frontc/clexer.mll"
           (EXCLAM_EQ)
# 2092 "cil/src/frontc/clexer.ml"

  | 34 ->
# 601 "cil/src/frontc/clexer.mll"
          (INF_EQ)
# 2097 "cil/src/frontc/clexer.ml"

  | 35 ->
# 602 "cil/src/frontc/clexer.mll"
          (SUP_EQ)
# 2102 "cil/src/frontc/clexer.ml"

  | 36 ->
# 603 "cil/src/frontc/clexer.mll"
          (EQ)
# 2107 "cil/src/frontc/clexer.ml"

  | 37 ->
# 604 "cil/src/frontc/clexer.mll"
          (INF)
# 2112 "cil/src/frontc/clexer.ml"

  | 38 ->
# 605 "cil/src/frontc/clexer.mll"
          (SUP)
# 2117 "cil/src/frontc/clexer.ml"

  | 39 ->
# 606 "cil/src/frontc/clexer.mll"
          (PLUS_PLUS (currentLoc ()))
# 2122 "cil/src/frontc/clexer.ml"

  | 40 ->
# 607 "cil/src/frontc/clexer.mll"
          (MINUS_MINUS (currentLoc ()))
# 2127 "cil/src/frontc/clexer.ml"

  | 41 ->
# 608 "cil/src/frontc/clexer.mll"
          (ARROW)
# 2132 "cil/src/frontc/clexer.ml"

  | 42 ->
# 609 "cil/src/frontc/clexer.mll"
          (PLUS (currentLoc ()))
# 2137 "cil/src/frontc/clexer.ml"

  | 43 ->
# 610 "cil/src/frontc/clexer.mll"
          (MINUS (currentLoc ()))
# 2142 "cil/src/frontc/clexer.ml"

  | 44 ->
# 611 "cil/src/frontc/clexer.mll"
          (STAR (currentLoc ()))
# 2147 "cil/src/frontc/clexer.ml"

  | 45 ->
# 612 "cil/src/frontc/clexer.mll"
          (SLASH)
# 2152 "cil/src/frontc/clexer.ml"

  | 46 ->
# 613 "cil/src/frontc/clexer.mll"
          (PERCENT)
# 2157 "cil/src/frontc/clexer.ml"

  | 47 ->
# 614 "cil/src/frontc/clexer.mll"
         (EXCLAM (currentLoc ()))
# 2162 "cil/src/frontc/clexer.ml"

  | 48 ->
# 615 "cil/src/frontc/clexer.mll"
          (AND_AND (currentLoc ()))
# 2167 "cil/src/frontc/clexer.ml"

  | 49 ->
# 616 "cil/src/frontc/clexer.mll"
          (PIPE_PIPE)
# 2172 "cil/src/frontc/clexer.ml"

  | 50 ->
# 617 "cil/src/frontc/clexer.mll"
          (AND (currentLoc ()))
# 2177 "cil/src/frontc/clexer.ml"

  | 51 ->
# 618 "cil/src/frontc/clexer.mll"
          (PIPE)
# 2182 "cil/src/frontc/clexer.ml"

  | 52 ->
# 619 "cil/src/frontc/clexer.mll"
          (CIRC)
# 2187 "cil/src/frontc/clexer.ml"

  | 53 ->
# 620 "cil/src/frontc/clexer.mll"
          (QUEST)
# 2192 "cil/src/frontc/clexer.ml"

  | 54 ->
# 621 "cil/src/frontc/clexer.mll"
          (COLON)
# 2197 "cil/src/frontc/clexer.ml"

  | 55 ->
# 622 "cil/src/frontc/clexer.mll"
               (TILDE (currentLoc ()))
# 2202 "cil/src/frontc/clexer.ml"

  | 56 ->
# 624 "cil/src/frontc/clexer.mll"
               (dbgToken (LBRACE (currentLoc ())))
# 2207 "cil/src/frontc/clexer.ml"

  | 57 ->
# 625 "cil/src/frontc/clexer.mll"
               (dbgToken (RBRACE (currentLoc ())))
# 2212 "cil/src/frontc/clexer.ml"

  | 58 ->
# 626 "cil/src/frontc/clexer.mll"
          (LBRACKET)
# 2217 "cil/src/frontc/clexer.ml"

  | 59 ->
# 627 "cil/src/frontc/clexer.mll"
          (RBRACKET)
# 2222 "cil/src/frontc/clexer.ml"

  | 60 ->
# 628 "cil/src/frontc/clexer.mll"
               (dbgToken (LPAREN (currentLoc ())) )
# 2227 "cil/src/frontc/clexer.ml"

  | 61 ->
# 629 "cil/src/frontc/clexer.mll"
          (RPAREN)
# 2232 "cil/src/frontc/clexer.ml"

  | 62 ->
# 630 "cil/src/frontc/clexer.mll"
               (dbgToken (SEMICOLON (currentLoc ())) )
# 2237 "cil/src/frontc/clexer.ml"

  | 63 ->
# 631 "cil/src/frontc/clexer.mll"
          (COMMA)
# 2242 "cil/src/frontc/clexer.ml"

  | 64 ->
# 632 "cil/src/frontc/clexer.mll"
          (DOT)
# 2247 "cil/src/frontc/clexer.ml"

  | 65 ->
# 633 "cil/src/frontc/clexer.mll"
             (SIZEOF (currentLoc ()))
# 2252 "cil/src/frontc/clexer.ml"

  | 66 ->
# 634 "cil/src/frontc/clexer.mll"
                                        ( if !Cprint.msvcMode then
                                             MSASM (msasm lexbuf, currentLoc ())
                                          else (ASM (currentLoc ())) )
# 2259 "cil/src/frontc/clexer.ml"

  | 67 ->
# 639 "cil/src/frontc/clexer.mll"
                                        ( matchingParsOpen := 0;
                                          let _ = matchingpars lexbuf in
                                          addWhite lexbuf;
                                          initial lexbuf
                                        )
# 2268 "cil/src/frontc/clexer.ml"

  | 68 ->
# 646 "cil/src/frontc/clexer.mll"
                                        (AT_TRANSFORM (currentLoc ()))
# 2273 "cil/src/frontc/clexer.ml"

  | 69 ->
# 647 "cil/src/frontc/clexer.mll"
                                        (AT_TRANSFORMEXPR (currentLoc ()))
# 2278 "cil/src/frontc/clexer.ml"

  | 70 ->
# 648 "cil/src/frontc/clexer.mll"
                                        (AT_SPECIFIER (currentLoc ()))
# 2283 "cil/src/frontc/clexer.ml"

  | 71 ->
# 649 "cil/src/frontc/clexer.mll"
                                        (AT_EXPR (currentLoc ()))
# 2288 "cil/src/frontc/clexer.ml"

  | 72 ->
# 650 "cil/src/frontc/clexer.mll"
                                        (AT_NAME)
# 2293 "cil/src/frontc/clexer.ml"

  | 73 ->
# 654 "cil/src/frontc/clexer.mll"
                                        (addWhite lexbuf; initial lexbuf )
# 2298 "cil/src/frontc/clexer.ml"

  | 74 ->
# 655 "cil/src/frontc/clexer.mll"
           (scan_ident (Lexing.lexeme lexbuf))
# 2303 "cil/src/frontc/clexer.ml"

  | 75 ->
# 657 "cil/src/frontc/clexer.mll"
  ( if is_oneline_ghost() then begin
      exit_oneline_ghost (); RGHOST
    end
    else EOF
  )
# 2312 "cil/src/frontc/clexer.ml"

  | 76 ->
# 662 "cil/src/frontc/clexer.mll"
       (E.parse_error "Invalid symbol")
# 2317 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_initial_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 189
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 664 "cil/src/frontc/clexer.mll"
                                ( addWhite lexbuf; [] )
# 2328 "cil/src/frontc/clexer.ml"

  | 1 ->
# 665 "cil/src/frontc/clexer.mll"
                                ( E.newline (); comment lexbuf )
# 2333 "cil/src/frontc/clexer.ml"

  | 2 ->
# 667 "cil/src/frontc/clexer.mll"
      ( addWhite lexbuf; comment lexbuf )
# 2338 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and onelinecomment lexbuf =
    __ocaml_lex_onelinecomment_rec lexbuf 193
and __ocaml_lex_onelinecomment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 670 "cil/src/frontc/clexer.mll"
                (addWhite lexbuf; [])
# 2349 "cil/src/frontc/clexer.ml"

  | 1 ->
# 671 "cil/src/frontc/clexer.mll"
                (addWhite lexbuf; lex_comment onelinecomment lexbuf )
# 2354 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_onelinecomment_rec lexbuf __ocaml_lex_state

and matchingpars lexbuf =
    __ocaml_lex_matchingpars_rec lexbuf 194
and __ocaml_lex_matchingpars_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 674 "cil/src/frontc/clexer.mll"
                ( addWhite lexbuf; E.newline (); matchingpars lexbuf )
# 2365 "cil/src/frontc/clexer.ml"

  | 1 ->
# 675 "cil/src/frontc/clexer.mll"
                ( addWhite lexbuf; matchingpars lexbuf )
# 2370 "cil/src/frontc/clexer.ml"

  | 2 ->
# 676 "cil/src/frontc/clexer.mll"
                ( addWhite lexbuf; incr matchingParsOpen; matchingpars lexbuf )
# 2375 "cil/src/frontc/clexer.ml"

  | 3 ->
# 677 "cil/src/frontc/clexer.mll"
                ( addWhite lexbuf; decr matchingParsOpen;
                  if !matchingParsOpen = 0 then
                     ()
                  else
                     matchingpars lexbuf
                )
# 2385 "cil/src/frontc/clexer.ml"

  | 4 ->
# 683 "cil/src/frontc/clexer.mll"
         ( addWhite lexbuf; let il = comment lexbuf in
                  let sl = intlist_to_string il in
		  addComment sl;
                  matchingpars lexbuf)
# 2393 "cil/src/frontc/clexer.ml"

  | 5 ->
# 687 "cil/src/frontc/clexer.mll"
        ( addWhite lexbuf; (* '"' *)
                  let _ = str lexbuf in
                  matchingpars lexbuf
                 )
# 2401 "cil/src/frontc/clexer.ml"

  | 6 ->
# 691 "cil/src/frontc/clexer.mll"
                 ( addWhite lexbuf; matchingpars lexbuf )
# 2406 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_matchingpars_rec lexbuf __ocaml_lex_state

and hash lexbuf =
  lexbuf.Lexing.lex_mem <- Array.create 2 (-1) ;   __ocaml_lex_hash_rec lexbuf 198
and __ocaml_lex_hash_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 695 "cil/src/frontc/clexer.mll"
        ( addWhite lexbuf; E.newline (); initial lexbuf)
# 2417 "cil/src/frontc/clexer.ml"

  | 1 ->
# 696 "cil/src/frontc/clexer.mll"
         ( addWhite lexbuf; hash lexbuf)
# 2422 "cil/src/frontc/clexer.ml"

  | 2 ->
# 697 "cil/src/frontc/clexer.mll"
         ( addWhite lexbuf; (* We are seeing a line number. This is the number for the
                   * next line *)
                 let s = Lexing.lexeme lexbuf in
                 let lineno = try
                   int_of_string s
                 with Failure ("int_of_string") ->
                   (* the int is too big. *)
                   E.warn "Bad line number in preprocessed file: %s" s;
                   (-1)
                 in
                 E.setCurrentLine (lineno - 1);
                  (* A file name may follow *)
		  file lexbuf )
# 2439 "cil/src/frontc/clexer.ml"

  | 3 ->
# 710 "cil/src/frontc/clexer.mll"
                ( addWhite lexbuf; hash lexbuf )
# 2444 "cil/src/frontc/clexer.ml"

  | 4 ->
let
# 713 "cil/src/frontc/clexer.mll"
                                     pragmaName
# 2450 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_curr_pos in
# 714 "cil/src/frontc/clexer.mll"
                ( let here = currentLoc () in
                  PRAGMA_LINE (pragmaName ^ pragma lexbuf, here)
                )
# 2456 "cil/src/frontc/clexer.ml"

  | 5 ->
# 717 "cil/src/frontc/clexer.mll"
                ( pragmaLine := true; PRAGMA (currentLoc ()) )
# 2461 "cil/src/frontc/clexer.ml"

  | 6 ->
# 718 "cil/src/frontc/clexer.mll"
            ( addWhite lexbuf; endline lexbuf)
# 2466 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_hash_rec lexbuf __ocaml_lex_state

and file lexbuf =
    __ocaml_lex_file_rec lexbuf 301
and __ocaml_lex_file_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 721 "cil/src/frontc/clexer.mll"
                      (addWhite lexbuf; E.newline (); initial lexbuf)
# 2477 "cil/src/frontc/clexer.ml"

  | 1 ->
# 722 "cil/src/frontc/clexer.mll"
          (addWhite lexbuf; file lexbuf)
# 2482 "cil/src/frontc/clexer.ml"

  | 2 ->
# 723 "cil/src/frontc/clexer.mll"
                                ( addWhite lexbuf;  (* '"' *)
                                   let n = Lexing.lexeme lexbuf in
                                   let n1 = String.sub n 1
                                       ((String.length n) - 2) in
                                   E.setCurrentFile n1;
				 endline lexbuf)
# 2492 "cil/src/frontc/clexer.ml"

  | 3 ->
# 730 "cil/src/frontc/clexer.mll"
      (addWhite lexbuf; endline lexbuf)
# 2497 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_file_rec lexbuf __ocaml_lex_state

and endline lexbuf =
    __ocaml_lex_endline_rec lexbuf 305
and __ocaml_lex_endline_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 733 "cil/src/frontc/clexer.mll"
                ( addWhite lexbuf; E.newline (); initial lexbuf)
# 2508 "cil/src/frontc/clexer.ml"

  | 1 ->
# 734 "cil/src/frontc/clexer.mll"
                                ( EOF )
# 2513 "cil/src/frontc/clexer.ml"

  | 2 ->
# 735 "cil/src/frontc/clexer.mll"
      ( addWhite lexbuf; endline lexbuf)
# 2518 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_endline_rec lexbuf __ocaml_lex_state

and pragma lexbuf =
    __ocaml_lex_pragma_rec lexbuf 306
and __ocaml_lex_pragma_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 738 "cil/src/frontc/clexer.mll"
                        ( E.newline (); "" )
# 2529 "cil/src/frontc/clexer.ml"

  | 1 ->
# 739 "cil/src/frontc/clexer.mll"
                        ( let cur = Lexing.lexeme lexbuf in
                          cur ^ (pragma lexbuf) )
# 2535 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_pragma_rec lexbuf __ocaml_lex_state

and str lexbuf =
    __ocaml_lex_str_rec lexbuf 307
and __ocaml_lex_str_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 743 "cil/src/frontc/clexer.mll"
                        ([])
# 2546 "cil/src/frontc/clexer.ml"

  | 1 ->
# 744 "cil/src/frontc/clexer.mll"
             (addLexeme lexbuf; lex_hex_escape str lexbuf)
# 2551 "cil/src/frontc/clexer.ml"

  | 2 ->
# 745 "cil/src/frontc/clexer.mll"
             (addLexeme lexbuf; lex_oct_escape str lexbuf)
# 2556 "cil/src/frontc/clexer.ml"

  | 3 ->
# 746 "cil/src/frontc/clexer.mll"
          (addLexeme lexbuf; lex_simple_escape str lexbuf)
# 2561 "cil/src/frontc/clexer.ml"

  | 4 ->
# 747 "cil/src/frontc/clexer.mll"
                        (E.parse_error "unterminated string" )
# 2566 "cil/src/frontc/clexer.ml"

  | 5 ->
# 748 "cil/src/frontc/clexer.mll"
     (addLexeme lexbuf; lex_unescaped str lexbuf)
# 2571 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_str_rec lexbuf __ocaml_lex_state

and chr lexbuf =
    __ocaml_lex_chr_rec lexbuf 313
and __ocaml_lex_chr_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 751 "cil/src/frontc/clexer.mll"
              ([])
# 2582 "cil/src/frontc/clexer.ml"

  | 1 ->
# 752 "cil/src/frontc/clexer.mll"
             (lex_hex_escape chr lexbuf)
# 2587 "cil/src/frontc/clexer.ml"

  | 2 ->
# 753 "cil/src/frontc/clexer.mll"
             (lex_oct_escape chr lexbuf)
# 2592 "cil/src/frontc/clexer.ml"

  | 3 ->
# 754 "cil/src/frontc/clexer.mll"
          (lex_simple_escape chr lexbuf)
# 2597 "cil/src/frontc/clexer.ml"

  | 4 ->
# 755 "cil/src/frontc/clexer.mll"
                        ( E.parse_error "unterminated char" )
# 2602 "cil/src/frontc/clexer.ml"

  | 5 ->
# 756 "cil/src/frontc/clexer.mll"
     (lex_unescaped chr lexbuf)
# 2607 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_chr_rec lexbuf __ocaml_lex_state

and msasm lexbuf =
    __ocaml_lex_msasm_rec lexbuf 319
and __ocaml_lex_msasm_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 759 "cil/src/frontc/clexer.mll"
                        ( msasm lexbuf )
# 2618 "cil/src/frontc/clexer.ml"

  | 1 ->
# 760 "cil/src/frontc/clexer.mll"
                        ( msasminbrace lexbuf )
# 2623 "cil/src/frontc/clexer.ml"

  | 2 ->
# 761 "cil/src/frontc/clexer.mll"
                        ( let cur = Lexing.lexeme lexbuf in
                          cur ^ (msasmnobrace lexbuf) )
# 2629 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_msasm_rec lexbuf __ocaml_lex_state

and msasminbrace lexbuf =
    __ocaml_lex_msasminbrace_rec lexbuf 321
and __ocaml_lex_msasminbrace_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 765 "cil/src/frontc/clexer.mll"
                        ( "" )
# 2640 "cil/src/frontc/clexer.ml"

  | 1 ->
# 766 "cil/src/frontc/clexer.mll"
                        ( let cur = Lexing.lexeme lexbuf in
                          cur ^ (msasminbrace lexbuf) )
# 2646 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_msasminbrace_rec lexbuf __ocaml_lex_state

and msasmnobrace lexbuf =
    __ocaml_lex_msasmnobrace_rec lexbuf 322
and __ocaml_lex_msasmnobrace_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 769 "cil/src/frontc/clexer.mll"
                        ( lexbuf.Lexing.lex_curr_pos <-
                               lexbuf.Lexing.lex_curr_pos - 1;
                          "" )
# 2659 "cil/src/frontc/clexer.ml"

  | 1 ->
# 772 "cil/src/frontc/clexer.mll"
                        ( lexbuf.Lexing.lex_curr_pos <-
                               lexbuf.Lexing.lex_curr_pos - 5;
                          "" )
# 2666 "cil/src/frontc/clexer.ml"

  | 2 ->
# 775 "cil/src/frontc/clexer.mll"
                        ( let cur = Lexing.lexeme lexbuf in

                          cur ^ (msasmnobrace lexbuf) )
# 2673 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_msasmnobrace_rec lexbuf __ocaml_lex_state

and annot_first_token lexbuf =
    __ocaml_lex_annot_first_token_rec lexbuf 327
and __ocaml_lex_annot_first_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 780 "cil/src/frontc/clexer.mll"
            (
      if is_oneline_ghost () then E.parse_error "nested ghost code";
      Buffer.clear buf; LGHOST
    )
# 2687 "cil/src/frontc/clexer.ml"

  | 1 ->
let
# 784 "cil/src/frontc/clexer.mll"
                         c
# 2693 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 784 "cil/src/frontc/clexer.mll"
                           ( Buffer.add_char buf c; annot_first_token lexbuf )
# 2697 "cil/src/frontc/clexer.ml"

  | 2 ->
# 785 "cil/src/frontc/clexer.mll"
         ( E.newline(); Buffer.add_char buf '\n'; annot_first_token lexbuf )
# 2702 "cil/src/frontc/clexer.ml"

  | 3 ->
# 786 "cil/src/frontc/clexer.mll"
       ( annot_token lexbuf )
# 2707 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_annot_first_token_rec lexbuf __ocaml_lex_state

and annot_token lexbuf =
    __ocaml_lex_annot_token_rec lexbuf 332
and __ocaml_lex_annot_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 788 "cil/src/frontc/clexer.mll"
         ( let s = Buffer.contents buf in
           make_annot s )
# 2719 "cil/src/frontc/clexer.ml"

  | 1 ->
# 790 "cil/src/frontc/clexer.mll"
         ( E.parse_error "Unterminated annotation" )
# 2724 "cil/src/frontc/clexer.ml"

  | 2 ->
# 791 "cil/src/frontc/clexer.mll"
         (E.newline(); Buffer.add_char buf '\n'; annot_token lexbuf )
# 2729 "cil/src/frontc/clexer.ml"

  | 3 ->
let
# 792 "cil/src/frontc/clexer.mll"
         c
# 2735 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 792 "cil/src/frontc/clexer.mll"
           ( Buffer.add_char buf c; annot_token lexbuf )
# 2739 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_annot_token_rec lexbuf __ocaml_lex_state

and annot_one_line lexbuf =
    __ocaml_lex_annot_one_line_rec lexbuf 334
and __ocaml_lex_annot_one_line_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 795 "cil/src/frontc/clexer.mll"
            (
      if is_oneline_ghost () then E.parse_error "nested ghost code";
      enter_oneline_ghost (); LGHOST
    )
# 2753 "cil/src/frontc/clexer.ml"

  | 1 ->
let
# 799 "cil/src/frontc/clexer.mll"
                         c
# 2759 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 799 "cil/src/frontc/clexer.mll"
                           ( Buffer.add_char buf c; annot_one_line lexbuf )
# 2763 "cil/src/frontc/clexer.ml"

  | 2 ->
# 800 "cil/src/frontc/clexer.mll"
       ( annot_one_line_logic lexbuf )
# 2768 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_annot_one_line_rec lexbuf __ocaml_lex_state

and annot_one_line_logic lexbuf =
    __ocaml_lex_annot_one_line_logic_rec lexbuf 339
and __ocaml_lex_annot_one_line_logic_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 802 "cil/src/frontc/clexer.mll"
         ( E.newline (); make_annot (Buffer.contents buf) )
# 2779 "cil/src/frontc/clexer.ml"

  | 1 ->
let
# 803 "cil/src/frontc/clexer.mll"
         c
# 2785 "cil/src/frontc/clexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 803 "cil/src/frontc/clexer.mll"
           ( Buffer.add_char buf c; annot_one_line_logic lexbuf )
# 2789 "cil/src/frontc/clexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_annot_one_line_logic_rec lexbuf __ocaml_lex_state

;;

# 805 "cil/src/frontc/clexer.mll"
 


# 2799 "cil/src/frontc/clexer.ml"

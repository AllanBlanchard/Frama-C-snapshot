(**************************************************************************)
(*                                                                        *)
(*  This file is part of WP plug-in of Frama-C.                           *)
(*                                                                        *)
(*  Copyright (C) 2007-2012                                               *)
(*    CEA (Commissariat a l'énergie atomique et aux énergies              *)
(*         alternatives)                                                  *)
(*                                                                        *)
(*  you can redistribute it and/or modify it under the terms of the GNU   *)
(*  Lesser General Public License as published by the Free Software       *)
(*  Foundation, version 2.1.                                              *)
(*                                                                        *)
(*  It is distributed in the hope that it will be useful,                 *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of        *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *)
(*  GNU Lesser General Public License for more details.                   *)
(*                                                                        *)
(*  See the GNU Lesser General Public License version 2.1                 *)
(*  for more details (enclosed in the file licenses/LGPLv2.1).            *)
(*                                                                        *)
(**************************************************************************)

(* -------------------------------------------------------------------------- *)
(* --- Mathematics for Alt-Ergo                                           --- *)
(* -------------------------------------------------------------------------- *)

logic abs_int : int -> int
axiom abs_int_def :
  forall x:int [abs_int(x)].
  (x >= 0 and abs_int(x)=x) or
  (x <= 0 and abs_int(x)=-x)

logic abs_real : real -> real
axiom abs_real_def :
  forall x:real [abs_real(x)].
  (x >= 0.0 and abs_real(x)=x) or
  (x <= 0.0 and abs_real(x)=x)

logic max_int : int,int -> int
logic min_int : int,int -> int

axiom max_int_def : 
  forall x:int. forall y:int [max_int(x,y)].
  ((x>=y) -> max_int(x,y) = x)
  and
  ((x<y) -> max_int(x,y) = y)

logic max_real : real,real -> real
logic min_real : real,real -> real


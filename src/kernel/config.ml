(* This file is generated by Makefile. Do not modify. *)
let version = "Carbon-20110201"
let date = "Mon Feb 7 15:02:38 CET 2011"
let is_gui = ref false
let ocamlc = "ocamlc.opt"
let ocamlopt = "ocamlopt.opt"
let datadir = try Sys.getenv "FRAMAC_SHARE" with Not_found -> "/usr/local/share/frama-c"
let libdir = try Sys.getenv "FRAMAC_LIB" with Not_found -> "/usr/local/lib/frama-c"
let plugin_dir = try Sys.getenv "FRAMAC_PLUGIN" with Not_found -> try (Sys.getenv "FRAMAC_LIB") ^ "/plugins" with Not_found -> "/usr/local/lib/frama-c/plugins"
let static_plugins = [ "Occurrence"; "Metrics"; "Syntactic_callgraph"; "Value"; "RteGen"; "Report"; "From"; "Users"; "Constant_Propagation"; "Postdominators"; "Inout"; "Semantic_callgraph"; "Impact"; "Pdg"; "Scope"; "Sparecode"; "Slicing" ]
let static_gui_plugins = [ "Occurrence"; "Metrics"; "Syntactic_callgraph"; "Value"; "From"; "Impact"; "Scope"; "Slicing" ]
let compilation_unit_names = [ "unmarshal"; "unmarshal_nums"; "printexc_common_interface"; "dynlink_common_interface"; "structural_descr"; "type"; "descr"; "extlib"; "pretty_utils"; "hook"; "bag"; "bitvector"; "qstack"; "config"; "gui_init"; "log"; "cmdline"; "project_skeleton"; "datatype"; "journal"; "rangemap"; "state"; "state_dependency_graph"; "state_topological"; "state_selection"; "project"; "dashtbl"; "state_builder"; "cilmsg"; "alpha"; "clist"; "growArray"; "inthash"; "cil_datatype"; "cilutil"; "setWithNearest"; "cil_state_builder"; "utf8_logic"; "cilglobopt"; "machdep_x86_16"; "machdep_x86_32"; "machdep_x86_64"; "machdep_ppc_32"; "machdep_ppc_32_diab"; "machdep"; "cil_const"; "logic_env"; "escape"; "logic_const"; "cil"; "errorloc"; "cabs"; "expcompare"; "cabshelper"; "whitetrack"; "logic_utils"; "logic_builtin"; "logic_print"; "logic_parser"; "logic_lexer"; "lexerhack"; "mergecil"; "rmtmps"; "logic_typing"; "cprint"; "cabscond"; "cabsvisit"; "cabs2cil"; "clexer"; "cparser"; "logic_preprocess"; "patch"; "frontc"; "obfuscate"; "ciltools"; "callgraph"; "dataflow"; "dominators"; "oneret"; "cfg"; "usedef"; "liveness"; "reachingdefs"; "availexpslv"; "rmciltmps"; "deadcodeelim"; "zrapp"; "buckx"; "dynamic"; "ast_printer"; "ast_info"; "kernel_datatype"; "plugin"; "kernel"; "alarms"; "cilE"; "binary_cache"; "parameters"; "messages"; "ast"; "my_bigint"; "hptmap"; "hptset"; "abstract_interp"; "int_Base"; "unicode"; "bit_utils"; "subst"; "annotations"; "globals"; "kernel_function"; "service_graph"; "ival"; "base"; "base_Set_Lattice"; "origin"; "map_Lattice"; "abstract_value"; "locations"; "shifted_Location"; "path_lattice"; "int_Interv"; "int_Interv_Map"; "new_offsetmap"; "offsetmap"; "offsetmap_bitwise"; "lmap"; "lmap_bitwise"; "lmap_whole"; "function_Froms"; "cvalue_type"; "widen_type"; "relations_type"; "state_set"; "state_imp"; "stmts_graph"; "visitor"; "printer"; "unroll_loops"; "loop"; "property"; "properties_status"; "inout_type"; "pdgIndex"; "pdgTypes"; "pdgMarks"; "slicingInternals"; "slicingTypes"; "db"; "command"; "task"; "translate_lightweight"; "file"; "filter"; "special_hooks"; "widen"; "bit_model_access"; "logic_interp"; "infer_annotations"; "Occurrence"; "Metrics"; "Syntactic_callgraph"; "Value"; "RteGen"; "Report"; "From"; "Users"; "Constant_Propagation"; "Postdominators"; "Inout"; "Semantic_callgraph"; "Impact"; "Pdg"; "Scope"; "Sparecode"; "Slicing"; "boot"; "dgraph"; "viewgraph"; "gui_parameters"; "gtk_form"; "gtk_helper"; "source_viewer"; "pretty_source"; "source_manager"; "warning_manager"; "filetree"; "launcher"; "menu_manager"; "design"; "analyses_manager"; "file_manager"; "project_manager"; "debug_manager"; "help_manager"; "property_navigator"; "Occurrence"; "Metrics"; "Syntactic_callgraph"; "Value"; "From"; "Impact"; "Scope"; "Slicing" ]
let dot = Some "dot"

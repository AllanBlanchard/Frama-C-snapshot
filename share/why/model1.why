(**************************************************************************)
(*                                                                        *)
(*  This file is part of Frama-C.                                         *)
(*                                                                        *)
(*  Copyright (C) 2007-2009                                               *)
(*    CEA   (Commissariat à l'Énergie Atomique)                           *)
(*    INRIA (Institut National de Recherche en Informatique et en         *)
(*           Automatique)                                                 *)
(*                                                                        *)
(*  you can redistribute it and/or modify it under the terms of the GNU   *)
(*  Lesser General Public License as published by the Free Software       *)
(*  Foundation, version 2.1.                                              *)
(*                                                                        *)
(*  It is distributed in the hope that it will be useful,                 *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of        *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *)
(*  GNU Lesser General Public License for more details.                   *)
(*                                                                        *)
(*  See the GNU Lesser General Public License version v2.1                *)
(*  for more details (enclosed in the file licenses/LGPLv2.1).            *)
(*                                                                        *)
(**************************************************************************)

(* include "./model0.why" *)

(* this should be a lot more complex, but for the moment,
it is here just in order not to give incorrect results *)
logic guard : int, 'a pointer -> prop

logic deref_pointer : 'a pointer -> 'a

axiom deref_index : forall pt:'a farray pointer. forall i :int.
  deref_pointer (shift_index (pt, i)) 
= acc_index (deref_pointer (pt), (i))

axiom deref_field : forall ps:'a pointer. forall f : 'f field.
  deref_pointer (shift_field (ps, f)) = acc_field (deref_pointer (ps), f)

logic update_pointer : 'a pointer, 'a -> 'a pointer

axiom deref_mui : forall p: 'a pointer. forall x : 'a.
  valid_pointer (p) ->
 deref_pointer (update_pointer (p, x)) = x

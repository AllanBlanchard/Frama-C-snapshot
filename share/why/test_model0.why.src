type X

type S

logic S_a: -> int field

goal  acc_upd_field_int : forall s : S. 
  acc_field (upd_field (s, S_a, 2), S_a) + 1 = 3

logic S_b: -> int field
axiom ax_field_S_a_b: neq_field(S_a, S_b)

goal  acc_upd_field_int_ned : forall s : S. 
  acc_field (upd_field (s, S_b, 2), S_a) = acc_field (s, S_a)

type S2

logic S_s: -> S2 field
axiom ax_field_S_a_s: neq_field(S_a, S_s)

goal acc_upd_field_neq_sym  : forall s : S.
  acc_field (upd_field (s, S_a, 2), S_s) = acc_field (s, S_s)

goal acc_upd_index : forall t : X farray. forall x : X.
  access (update (t, 1, x), 2) = access (t, 2)

(* TODO : add some more tests... *)

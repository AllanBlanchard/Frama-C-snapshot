(**************************************************************************)
(*                                                                        *)
(*  This file is part of Frama-C.                                         *)
(*                                                                        *)
(*  Copyright (C) 2007-2010                                               *)
(*    CEA   (Commissariat à l'énergie atomique et aux énergies            *)
(*           alternatives)                                                *)
(*    INRIA (Institut National de Recherche en Informatique et en         *)
(*           Automatique)                                                 *)
(*                                                                        *)
(*  you can redistribute it and/or modify it under the terms of the GNU   *)
(*  Lesser General Public License as published by the Free Software       *)
(*  Foundation, version 2.1.                                              *)
(*                                                                        *)
(*  It is distributed in the hope that it will be useful,                 *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of        *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *)
(*  GNU Lesser General Public License for more details.                   *)
(*                                                                        *)
(*  See the GNU Lesser General Public License version v2.1                *)
(*  for more details (enclosed in the file licenses/LGPLv2.1).            *)
(*                                                                        *)
(**************************************************************************)

include "integer.why"

axiom lt_int_bool_false : 
  forall x:int. forall y:int. lt_int_bool(x,y)=false <-> x>=y
axiom le_int_bool_false : 
  forall x:int. forall y:int. le_int_bool(x,y)=false <-> x>y
axiom gt_int_bool_false : 
  forall x:int. forall y:int. gt_int_bool(x,y)=false <-> x<=y
axiom ge_int_bool_false : 
  forall x:int. forall y:int. ge_int_bool(x,y)=false <-> x<y
axiom eq_int_bool_false : 
  forall x:int. forall y:int. eq_int_bool(x,y)=false <-> x<>y
axiom neq_int_bool_false : 
  forall x:int. forall y:int. neq_int_bool(x,y)=false <-> x=y

axiom lt_then_le : 
 forall  x:int. forall y:int. 
   lt_int_bool(x,y)=true -> le_int_bool(x,y)=true


